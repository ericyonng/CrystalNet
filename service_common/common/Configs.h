/*!
 *  MIT License
 *  
 *  Copyright (c) 2020 ericyonng<120453674@qq.com>
 *  
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *  
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *  
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 * 
 * Date: 2022-06-24 00:52:38
 * Author: Eric Yonng
 * Description: 默认的配置
*/

#ifndef __CRYSTAL_NET_SERVICE_COMMON_CONFIGS_H__
#define __CRYSTAL_NET_SERVICE_COMMON_CONFIGS_H__

#pragma once

// // 内核配置项
#undef APPLICATION_KERNEL_CONFIG_SEG
#define APPLICATION_KERNEL_CONFIG_SEG   "KERNEL_OPTION"

// 黑白名单模式
#undef KERNEL_OPTION_BLACK_WHITE_LIST_FLAG_KEY 
#define KERNEL_OPTION_BLACK_WHITE_LIST_FLAG_KEY "BlackWhiteListMode"
// 默认黑白名单并允许未知通过
#undef KERNEL_OPTION_BLACK_WHITE_LIST_FLAG_DEFAULT_VALUE
#define KERNEL_OPTION_BLACK_WHITE_LIST_FLAG_DEFAULT_VALUE  (KERNEL_NS::BlackWhiteFlag::CheckBlackFlag | KERNEL_NS::BlackWhiteFlag::CheckWhiteFlag | KERNEL_NS::BlackWhiteFlag::AllowUnknownFlag)

// 最大会话数量
#undef MAX_SESSION_QUANTITY_KEY
#define MAX_SESSION_QUANTITY_KEY "MaxSessionQuantity"
// 默认上限10万个会话
#undef MAX_SESSION_QUANTITY_DEFAULT_VALUE
#define MAX_SESSION_QUANTITY_DEFAULT_VALUE 100000

// poller相关配置
// 连入连出poller数量 1
#undef LINK_IN_OUT_POLLER_AMOUNT_KEY 
#define LINK_IN_OUT_POLLER_AMOUNT_KEY "LinkInOutPollerAmount"
#undef LINK_IN_OUT_POLLER_AMOUNT_DEFAULT_VALUE
#define LINK_IN_OUT_POLLER_AMOUNT_DEFAULT_VALUE 1
// 数据传输的poller数量 1
#undef DATA_TRANSFER_POLLER_AMOUNT_KEY
#define DATA_TRANSFER_POLLER_AMOUNT_KEY "DataTransferPollerAmount"
#undef DATA_TRANSFER_POLLER_AMOUNT_DEFAULT_VALUE
#define DATA_TRANSFER_POLLER_AMOUNT_DEFAULT_VALUE 1
// 单帧最大接收数据量 16KB
#undef MAX_RECV_BYTES_PER_FRAME_KEY
#define MAX_RECV_BYTES_PER_FRAME_KEY "MaxRecvBytesPerFrame"
#undef MAX_RECV_BYTES_PER_FRAME_DEFAULT_VALUE
#define MAX_RECV_BYTES_PER_FRAME_DEFAULT_VALUE (16*1024)
// 单帧最大发送数据量 16KB
#undef MAX_SEND_BYTES_PER_FRAME_KEY
#define MAX_SEND_BYTES_PER_FRAME_KEY "MaxSendBytesPerFrame"
#undef MAX_SEND_BYTES_PER_FRAME_DEFAULT_VALUE
#define MAX_SEND_BYTES_PER_FRAME_DEFAULT_VALUE (16*1024)
// 单帧最大处理连接数 1024
#undef MAX_ACCEPT_COUNT_PER_FRAME_KEY
#define MAX_ACCEPT_COUNT_PER_FRAME_KEY "MaxAcceptCountPerFrame"
#undef MAX_ACCEPT_COUNT_PER_FRAME_DEFAULT_VALUE
#define MAX_ACCEPT_COUNT_PER_FRAME_DEFAULT_VALUE 1024
// 最大帧时间片 8ms
#undef MAX_PIECE_TIME_IN_MICRO_SEC_PER_FRAME_KEY
#define MAX_PIECE_TIME_IN_MICRO_SEC_PER_FRAME_KEY "MaxPieceTimeInMicroSecPerFrame"
#undef MAX_PIECE_TIME_IN_MICRO_SEC_PER_FRAME_DEFAULT_VALUE
#define MAX_PIECE_TIME_IN_MICRO_SEC_PER_FRAME_DEFAULT_VALUE (8*1000)
// 最大poller扫描时间间隔 1ms
#undef MAX_POLLER_SCAN_MILLISECONDS_KEY
#define MAX_POLLER_SCAN_MILLISECONDS_KEY "MaxPollerScanMilliseconds"
#undef MAX_POLLER_SCAN_MILLISECONDS_DEFAULT_VALUE
#define MAX_POLLER_SCAN_MILLISECONDS_DEFAULT_VALUE 1
// 最大消息优先级等级 最大等级3
#undef MAX_POLLER_MSG_PRIORITY_LEVEL_KEY
#define MAX_POLLER_MSG_PRIORITY_LEVEL_KEY "MaxPollerMsgPriorityLevel"
#undef MAX_POLLER_MSG_PRIORITY_LEVEL_DEFAULT_VALUE
#define MAX_POLLER_MSG_PRIORITY_LEVEL_DEFAULT_VALUE 3
// 指定poller monitor事件的消息优先级等级 -1 让它选择最大等级作为优先级
#undef POLLER_MONITOR_EVENT_PRIORITY_LEVEL_KEY
#define POLLER_MONITOR_EVENT_PRIORITY_LEVEL_KEY "PollerMonitorEventPriorityLevel"
#undef POLLER_MONITOR_EVENT_PRIORITY_LEVEL_DEFAULT_VALUE
#define POLLER_MONITOR_EVENT_PRIORITY_LEVEL_DEFAULT_VALUE -1
// session缓冲大小设置 8KB
#undef SESSION_BUFFER_CAPACITY_KEY
#define SESSION_BUFFER_CAPACITY_KEY "SessionBufferCapicity"
#undef SESSION_BUFFER_CAPACITY_DEFAULT_VALUE
#define SESSION_BUFFER_CAPACITY_DEFAULT_VALUE (8*1024)


// // 服务配置项
#undef SERVICE_COMMON_CONFIG_SEG 
#define SERVICE_COMMON_CONFIG_SEG "ServiceCommon"

// 激活的服务项
#undef ACTIVE_SERVICE_ITEM_KEY
#define ACTIVE_SERVICE_ITEM_KEY "ActiveServiceItem"



// // app配置项目
#undef APPLICATION_CONFIG_SEG 
#define APPLICATION_CONFIG_SEG "ApplicationConfig"

// 项目类型名
#undef PROJECT_MAIN_SERVICE_NAME_KEY
#define PROJECT_MAIN_SERVICE_NAME_KEY "ProjectMainServiceName"
#undef PROJECT_MAIN_SERVICE_NAME_DEFAULT_VALUE
#define PROJECT_MAIN_SERVICE_NAME_DEFAULT_VALUE "TestSuit"
// 机器id
#undef MACHINE_ID_KEY 
#define MACHINE_ID_KEY "MachineId"
#undef MACHINE_ID_DEFAULT_VALUE
#define MACHINE_ID_DEFAULT_VALUE 0
// 注册成功机器时间
#undef REGISTER_TIME_KEY
#define REGISTER_TIME_KEY "RegisterTime"
#undef REGISTER_TIME_DEFAULT_VALUE
#define REGISTER_TIME_DEFAULT_VALUE 0
// 注册成功的进程路径
#undef REGISTER_PATH_KEY
#define REGISTER_PATH_KEY "RegisterPath"
#undef REGISTER_PATH_DEFAULT_VALUE
#define REGISTER_PATH_DEFAULT_VALUE ""
// 注册成功的进程id
#undef REGISTER_PROCESS_ID_KEY
#define REGISTER_PROCESS_ID_KEY "RegisterProcessId"
#undef REGISTER_PROCESS_ID_DEFAULT_VALUE
#define REGISTER_PROCESS_ID_DEFAULT_VALUE 0
// 程序申请机器id时的生成的唯一标识id
#undef MACHINE_APPLY_ID_KEY
#define MACHINE_APPLY_ID_KEY "MachineApplyId"
#undef MACHINE_APPLY_ID_DEFAULT_VALUE 
#define MACHINE_APPLY_ID_DEFAULT_VALUE ""



#endif
