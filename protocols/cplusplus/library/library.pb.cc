#include <pch.h>
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: library.proto

#include <protocols/cplusplus/library/library.pb.h>
POOL_CREATE_OBJ_DEFAULT_IMPL(GetLibraryInfoReqFactory);
POOL_CREATE_OBJ_DEFAULT_IMPL(LibraryInfoNtyFactory);
POOL_CREATE_OBJ_DEFAULT_IMPL(GetLibraryInfoResFactory);
POOL_CREATE_OBJ_DEFAULT_IMPL(CreateLibraryReqFactory);
POOL_CREATE_OBJ_DEFAULT_IMPL(CreateLibraryResFactory);
POOL_CREATE_OBJ_DEFAULT_IMPL(JoinLibraryReqFactory);
POOL_CREATE_OBJ_DEFAULT_IMPL(JoinLibraryResFactory);
POOL_CREATE_OBJ_DEFAULT_IMPL(QuitLibraryReqFactory);
POOL_CREATE_OBJ_DEFAULT_IMPL(QuitLibraryResFactory);
POOL_CREATE_OBJ_DEFAULT_IMPL(GetLibraryListReqFactory);
POOL_CREATE_OBJ_DEFAULT_IMPL(GetLibraryListResFactory);
POOL_CREATE_OBJ_DEFAULT_IMPL(TransferLibraianReqFactory);
POOL_CREATE_OBJ_DEFAULT_IMPL(TransferLibraianResFactory);
POOL_CREATE_OBJ_DEFAULT_IMPL(ModifyMemberInfoReqFactory);
POOL_CREATE_OBJ_DEFAULT_IMPL(ModifyMemberInfoResFactory);
POOL_CREATE_OBJ_DEFAULT_IMPL(UserLibraryInfoNtyFactory);
POOL_CREATE_OBJ_DEFAULT_IMPL(GetLibraryMemberSimpleInfoReqFactory);
POOL_CREATE_OBJ_DEFAULT_IMPL(GetLibraryMemberSimpleInfoResFactory);
POOL_CREATE_OBJ_DEFAULT_IMPL(AddLibraryBookReqFactory);
POOL_CREATE_OBJ_DEFAULT_IMPL(AddLibraryBookResFactory);
POOL_CREATE_OBJ_DEFAULT_IMPL(AddLibraryBookCountReqFactory);
POOL_CREATE_OBJ_DEFAULT_IMPL(AddLibraryBookCountResFactory);
POOL_CREATE_OBJ_DEFAULT_IMPL(GetBookListReqFactory);
POOL_CREATE_OBJ_DEFAULT_IMPL(BookListNtyFactory);
POOL_CREATE_OBJ_DEFAULT_IMPL(BooksChangeNtyFactory);
POOL_CREATE_OBJ_DEFAULT_IMPL(BookVariantInfoItemsNtyFactory);
POOL_CREATE_OBJ_DEFAULT_IMPL(GetBookListResFactory);
POOL_CREATE_OBJ_DEFAULT_IMPL(GetBookInfoReqFactory);
POOL_CREATE_OBJ_DEFAULT_IMPL(GetBookInfoResFactory);
POOL_CREATE_OBJ_DEFAULT_IMPL(GetBookByBookNameReqFactory);
POOL_CREATE_OBJ_DEFAULT_IMPL(GetBookByBookNameResFactory);
POOL_CREATE_OBJ_DEFAULT_IMPL(GetBookInfoListReqFactory);
POOL_CREATE_OBJ_DEFAULT_IMPL(GetBookInfoListResFactory);

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace CRYSTAL_NET {
namespace service {
PROTOBUF_CONSTEXPR GetLibraryInfoReq::GetLibraryInfoReq(
    ::_pbi::ConstantInitialized) {}
struct GetLibraryInfoReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLibraryInfoReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLibraryInfoReqDefaultTypeInternal() {}
  union {
    GetLibraryInfoReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLibraryInfoReqDefaultTypeInternal _GetLibraryInfoReq_default_instance_;
PROTOBUF_CONSTEXPR LibraryInfoNty::LibraryInfoNty(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.libraryinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LibraryInfoNtyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LibraryInfoNtyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LibraryInfoNtyDefaultTypeInternal() {}
  union {
    LibraryInfoNty _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LibraryInfoNtyDefaultTypeInternal _LibraryInfoNty_default_instance_;
PROTOBUF_CONSTEXPR GetLibraryInfoRes::GetLibraryInfoRes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.errcode_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetLibraryInfoResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLibraryInfoResDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLibraryInfoResDefaultTypeInternal() {}
  union {
    GetLibraryInfoRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLibraryInfoResDefaultTypeInternal _GetLibraryInfoRes_default_instance_;
PROTOBUF_CONSTEXPR CreateLibraryReq::CreateLibraryReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.invitecode_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.address_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.opentime_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.telphonenumber_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.bindphone_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateLibraryReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateLibraryReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateLibraryReqDefaultTypeInternal() {}
  union {
    CreateLibraryReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateLibraryReqDefaultTypeInternal _CreateLibraryReq_default_instance_;
PROTOBUF_CONSTEXPR CreateLibraryRes::CreateLibraryRes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.errcode_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateLibraryResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateLibraryResDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateLibraryResDefaultTypeInternal() {}
  union {
    CreateLibraryRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateLibraryResDefaultTypeInternal _CreateLibraryRes_default_instance_;
PROTOBUF_CONSTEXPR JoinLibraryReq::JoinLibraryReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.libraryid_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct JoinLibraryReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JoinLibraryReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~JoinLibraryReqDefaultTypeInternal() {}
  union {
    JoinLibraryReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JoinLibraryReqDefaultTypeInternal _JoinLibraryReq_default_instance_;
PROTOBUF_CONSTEXPR JoinLibraryRes::JoinLibraryRes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.errcode_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct JoinLibraryResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JoinLibraryResDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~JoinLibraryResDefaultTypeInternal() {}
  union {
    JoinLibraryRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JoinLibraryResDefaultTypeInternal _JoinLibraryRes_default_instance_;
PROTOBUF_CONSTEXPR QuitLibraryReq::QuitLibraryReq(
    ::_pbi::ConstantInitialized) {}
struct QuitLibraryReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuitLibraryReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuitLibraryReqDefaultTypeInternal() {}
  union {
    QuitLibraryReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuitLibraryReqDefaultTypeInternal _QuitLibraryReq_default_instance_;
PROTOBUF_CONSTEXPR QuitLibraryRes::QuitLibraryRes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.errcode_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QuitLibraryResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuitLibraryResDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuitLibraryResDefaultTypeInternal() {}
  union {
    QuitLibraryRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuitLibraryResDefaultTypeInternal _QuitLibraryRes_default_instance_;
PROTOBUF_CONSTEXPR GetLibraryListReq::GetLibraryListReq(
    ::_pbi::ConstantInitialized) {}
struct GetLibraryListReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLibraryListReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLibraryListReqDefaultTypeInternal() {}
  union {
    GetLibraryListReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLibraryListReqDefaultTypeInternal _GetLibraryListReq_default_instance_;
PROTOBUF_CONSTEXPR GetLibraryListRes::GetLibraryListRes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.librarypreviewinfolist_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetLibraryListResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLibraryListResDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLibraryListResDefaultTypeInternal() {}
  union {
    GetLibraryListRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLibraryListResDefaultTypeInternal _GetLibraryListRes_default_instance_;
PROTOBUF_CONSTEXPR TransferLibraianReq::TransferLibraianReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.targetuserid_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TransferLibraianReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransferLibraianReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransferLibraianReqDefaultTypeInternal() {}
  union {
    TransferLibraianReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransferLibraianReqDefaultTypeInternal _TransferLibraianReq_default_instance_;
PROTOBUF_CONSTEXPR TransferLibraianRes::TransferLibraianRes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.errcode_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TransferLibraianResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransferLibraianResDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransferLibraianResDefaultTypeInternal() {}
  union {
    TransferLibraianRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransferLibraianResDefaultTypeInternal _TransferLibraianRes_default_instance_;
PROTOBUF_CONSTEXPR ModifyMemberInfoReq::ModifyMemberInfoReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.memberuserid_)*/uint64_t{0u}
  , /*decltype(_impl_.ModifyRole_)*/{}
  , /*decltype(_impl_.ModifyPhoneNumber_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct ModifyMemberInfoReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModifyMemberInfoReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModifyMemberInfoReqDefaultTypeInternal() {}
  union {
    ModifyMemberInfoReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModifyMemberInfoReqDefaultTypeInternal _ModifyMemberInfoReq_default_instance_;
PROTOBUF_CONSTEXPR ModifyMemberInfoRes::ModifyMemberInfoRes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.errcode_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ModifyMemberInfoResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModifyMemberInfoResDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModifyMemberInfoResDefaultTypeInternal() {}
  union {
    ModifyMemberInfoRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModifyMemberInfoResDefaultTypeInternal _ModifyMemberInfoRes_default_instance_;
PROTOBUF_CONSTEXPR UserLibraryInfoNty::UserLibraryInfoNty(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.userlibraryinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UserLibraryInfoNtyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserLibraryInfoNtyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserLibraryInfoNtyDefaultTypeInternal() {}
  union {
    UserLibraryInfoNty _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserLibraryInfoNtyDefaultTypeInternal _UserLibraryInfoNty_default_instance_;
PROTOBUF_CONSTEXPR GetLibraryMemberSimpleInfoReq::GetLibraryMemberSimpleInfoReq(
    ::_pbi::ConstantInitialized) {}
struct GetLibraryMemberSimpleInfoReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLibraryMemberSimpleInfoReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLibraryMemberSimpleInfoReqDefaultTypeInternal() {}
  union {
    GetLibraryMemberSimpleInfoReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLibraryMemberSimpleInfoReqDefaultTypeInternal _GetLibraryMemberSimpleInfoReq_default_instance_;
PROTOBUF_CONSTEXPR GetLibraryMemberSimpleInfoRes::GetLibraryMemberSimpleInfoRes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.simpleuserinfolist_)*/{}
  , /*decltype(_impl_.errcode_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetLibraryMemberSimpleInfoResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLibraryMemberSimpleInfoResDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLibraryMemberSimpleInfoResDefaultTypeInternal() {}
  union {
    GetLibraryMemberSimpleInfoRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLibraryMemberSimpleInfoResDefaultTypeInternal _GetLibraryMemberSimpleInfoRes_default_instance_;
PROTOBUF_CONSTEXPR AddLibraryBookReq::AddLibraryBookReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.bookname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.isbncode_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.price_)*/int64_t{0}
  , /*decltype(_impl_.modifycount_)*/int64_t{0}
  , /*decltype(_impl_.BookCoverImageOption_)*/{}
  , /*decltype(_impl_.KeyWordsOption_)*/{}
  , /*decltype(_impl_.ContentOption_)*/{}
  , /*decltype(_impl_.SnapshotOption_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct AddLibraryBookReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddLibraryBookReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddLibraryBookReqDefaultTypeInternal() {}
  union {
    AddLibraryBookReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddLibraryBookReqDefaultTypeInternal _AddLibraryBookReq_default_instance_;
PROTOBUF_CONSTEXPR AddLibraryBookRes::AddLibraryBookRes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.errcode_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AddLibraryBookResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddLibraryBookResDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddLibraryBookResDefaultTypeInternal() {}
  union {
    AddLibraryBookRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddLibraryBookResDefaultTypeInternal _AddLibraryBookRes_default_instance_;
PROTOBUF_CONSTEXPR AddLibraryBookCountReq::AddLibraryBookCountReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.bookid_)*/uint64_t{0u}
  , /*decltype(_impl_.modifycount_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AddLibraryBookCountReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddLibraryBookCountReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddLibraryBookCountReqDefaultTypeInternal() {}
  union {
    AddLibraryBookCountReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddLibraryBookCountReqDefaultTypeInternal _AddLibraryBookCountReq_default_instance_;
PROTOBUF_CONSTEXPR AddLibraryBookCountRes::AddLibraryBookCountRes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.errcode_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AddLibraryBookCountResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddLibraryBookCountResDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddLibraryBookCountResDefaultTypeInternal() {}
  union {
    AddLibraryBookCountRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddLibraryBookCountResDefaultTypeInternal _AddLibraryBookCountRes_default_instance_;
PROTOBUF_CONSTEXPR GetBookListReq::GetBookListReq(
    ::_pbi::ConstantInitialized) {}
struct GetBookListReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBookListReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBookListReqDefaultTypeInternal() {}
  union {
    GetBookListReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBookListReqDefaultTypeInternal _GetBookListReq_default_instance_;
PROTOBUF_CONSTEXPR BookListNty::BookListNty(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.bookinfolist_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BookListNtyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BookListNtyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BookListNtyDefaultTypeInternal() {}
  union {
    BookListNty _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BookListNtyDefaultTypeInternal _BookListNty_default_instance_;
PROTOBUF_CONSTEXPR BooksChangeNty::BooksChangeNty(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.bookinfolist_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BooksChangeNtyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BooksChangeNtyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BooksChangeNtyDefaultTypeInternal() {}
  union {
    BooksChangeNty _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BooksChangeNtyDefaultTypeInternal _BooksChangeNty_default_instance_;
PROTOBUF_CONSTEXPR BookVariantInfoItemsNty::BookVariantInfoItemsNty(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.bookvariantinfoitemlist_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BookVariantInfoItemsNtyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BookVariantInfoItemsNtyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BookVariantInfoItemsNtyDefaultTypeInternal() {}
  union {
    BookVariantInfoItemsNty _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BookVariantInfoItemsNtyDefaultTypeInternal _BookVariantInfoItemsNty_default_instance_;
PROTOBUF_CONSTEXPR GetBookListRes::GetBookListRes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.errcode_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetBookListResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBookListResDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBookListResDefaultTypeInternal() {}
  union {
    GetBookListRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBookListResDefaultTypeInternal _GetBookListRes_default_instance_;
PROTOBUF_CONSTEXPR GetBookInfoReq::GetBookInfoReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.isbncode_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetBookInfoReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBookInfoReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBookInfoReqDefaultTypeInternal() {}
  union {
    GetBookInfoReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBookInfoReqDefaultTypeInternal _GetBookInfoReq_default_instance_;
PROTOBUF_CONSTEXPR GetBookInfoRes::GetBookInfoRes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.bookinfo_)*/nullptr
  , /*decltype(_impl_.errcode_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetBookInfoResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBookInfoResDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBookInfoResDefaultTypeInternal() {}
  union {
    GetBookInfoRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBookInfoResDefaultTypeInternal _GetBookInfoRes_default_instance_;
PROTOBUF_CONSTEXPR GetBookByBookNameReq::GetBookByBookNameReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.bookname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetBookByBookNameReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBookByBookNameReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBookByBookNameReqDefaultTypeInternal() {}
  union {
    GetBookByBookNameReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBookByBookNameReqDefaultTypeInternal _GetBookByBookNameReq_default_instance_;
PROTOBUF_CONSTEXPR GetBookByBookNameRes::GetBookByBookNameRes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.bookinfolist_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetBookByBookNameResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBookByBookNameResDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBookByBookNameResDefaultTypeInternal() {}
  union {
    GetBookByBookNameRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBookByBookNameResDefaultTypeInternal _GetBookByBookNameRes_default_instance_;
PROTOBUF_CONSTEXPR GetBookInfoListReq::GetBookInfoListReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.basebookid_)*/uint64_t{0u}
  , /*decltype(_impl_.bookcount_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetBookInfoListReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBookInfoListReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBookInfoListReqDefaultTypeInternal() {}
  union {
    GetBookInfoListReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBookInfoListReqDefaultTypeInternal _GetBookInfoListReq_default_instance_;
PROTOBUF_CONSTEXPR GetBookInfoListRes::GetBookInfoListRes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.bookinfolist_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetBookInfoListResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBookInfoListResDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBookInfoListResDefaultTypeInternal() {}
  union {
    GetBookInfoListRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBookInfoListResDefaultTypeInternal _GetBookInfoListRes_default_instance_;
}  // namespace service
}  // namespace CRYSTAL_NET
static ::_pb::Metadata file_level_metadata_library_2eproto[33];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_library_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_library_2eproto = nullptr;

const uint32_t TableStruct_library_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::GetLibraryInfoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::LibraryInfoNty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::LibraryInfoNty, _impl_.libraryinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::GetLibraryInfoRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::GetLibraryInfoRes, _impl_.errcode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::CreateLibraryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::CreateLibraryReq, _impl_.invitecode_),
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::CreateLibraryReq, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::CreateLibraryReq, _impl_.address_),
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::CreateLibraryReq, _impl_.opentime_),
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::CreateLibraryReq, _impl_.telphonenumber_),
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::CreateLibraryReq, _impl_.bindphone_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::CreateLibraryRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::CreateLibraryRes, _impl_.errcode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::JoinLibraryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::JoinLibraryReq, _impl_.libraryid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::JoinLibraryRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::JoinLibraryRes, _impl_.errcode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::QuitLibraryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::QuitLibraryRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::QuitLibraryRes, _impl_.errcode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::GetLibraryListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::GetLibraryListRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::GetLibraryListRes, _impl_.librarypreviewinfolist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::TransferLibraianReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::TransferLibraianReq, _impl_.targetuserid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::TransferLibraianRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::TransferLibraianRes, _impl_.errcode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::ModifyMemberInfoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::ModifyMemberInfoReq, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::ModifyMemberInfoReq, _impl_.memberuserid_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::ModifyMemberInfoReq, _impl_.ModifyRole_),
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::ModifyMemberInfoReq, _impl_.ModifyPhoneNumber_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::ModifyMemberInfoRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::ModifyMemberInfoRes, _impl_.errcode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::UserLibraryInfoNty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::UserLibraryInfoNty, _impl_.userlibraryinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::GetLibraryMemberSimpleInfoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::GetLibraryMemberSimpleInfoRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::GetLibraryMemberSimpleInfoRes, _impl_.errcode_),
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::GetLibraryMemberSimpleInfoRes, _impl_.simpleuserinfolist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::AddLibraryBookReq, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::AddLibraryBookReq, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::AddLibraryBookReq, _impl_.bookname_),
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::AddLibraryBookReq, _impl_.isbncode_),
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::AddLibraryBookReq, _impl_.price_),
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::AddLibraryBookReq, _impl_.modifycount_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::AddLibraryBookReq, _impl_.BookCoverImageOption_),
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::AddLibraryBookReq, _impl_.KeyWordsOption_),
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::AddLibraryBookReq, _impl_.ContentOption_),
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::AddLibraryBookReq, _impl_.SnapshotOption_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::AddLibraryBookRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::AddLibraryBookRes, _impl_.errcode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::AddLibraryBookCountReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::AddLibraryBookCountReq, _impl_.bookid_),
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::AddLibraryBookCountReq, _impl_.modifycount_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::AddLibraryBookCountRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::AddLibraryBookCountRes, _impl_.errcode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::GetBookListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::BookListNty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::BookListNty, _impl_.bookinfolist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::BooksChangeNty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::BooksChangeNty, _impl_.bookinfolist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::BookVariantInfoItemsNty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::BookVariantInfoItemsNty, _impl_.bookvariantinfoitemlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::GetBookListRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::GetBookListRes, _impl_.errcode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::GetBookInfoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::GetBookInfoReq, _impl_.isbncode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::GetBookInfoRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::GetBookInfoRes, _impl_.errcode_),
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::GetBookInfoRes, _impl_.bookinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::GetBookByBookNameReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::GetBookByBookNameReq, _impl_.bookname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::GetBookByBookNameRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::GetBookByBookNameRes, _impl_.bookinfolist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::GetBookInfoListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::GetBookInfoListReq, _impl_.basebookid_),
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::GetBookInfoListReq, _impl_.bookcount_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::GetBookInfoListRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::GetBookInfoListRes, _impl_.bookinfolist_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::CRYSTAL_NET::service::GetLibraryInfoReq)},
  { 6, -1, -1, sizeof(::CRYSTAL_NET::service::LibraryInfoNty)},
  { 13, -1, -1, sizeof(::CRYSTAL_NET::service::GetLibraryInfoRes)},
  { 20, -1, -1, sizeof(::CRYSTAL_NET::service::CreateLibraryReq)},
  { 32, -1, -1, sizeof(::CRYSTAL_NET::service::CreateLibraryRes)},
  { 39, -1, -1, sizeof(::CRYSTAL_NET::service::JoinLibraryReq)},
  { 46, -1, -1, sizeof(::CRYSTAL_NET::service::JoinLibraryRes)},
  { 53, -1, -1, sizeof(::CRYSTAL_NET::service::QuitLibraryReq)},
  { 59, -1, -1, sizeof(::CRYSTAL_NET::service::QuitLibraryRes)},
  { 66, -1, -1, sizeof(::CRYSTAL_NET::service::GetLibraryListReq)},
  { 72, -1, -1, sizeof(::CRYSTAL_NET::service::GetLibraryListRes)},
  { 79, -1, -1, sizeof(::CRYSTAL_NET::service::TransferLibraianReq)},
  { 86, -1, -1, sizeof(::CRYSTAL_NET::service::TransferLibraianRes)},
  { 93, -1, -1, sizeof(::CRYSTAL_NET::service::ModifyMemberInfoReq)},
  { 104, -1, -1, sizeof(::CRYSTAL_NET::service::ModifyMemberInfoRes)},
  { 111, -1, -1, sizeof(::CRYSTAL_NET::service::UserLibraryInfoNty)},
  { 118, -1, -1, sizeof(::CRYSTAL_NET::service::GetLibraryMemberSimpleInfoReq)},
  { 124, -1, -1, sizeof(::CRYSTAL_NET::service::GetLibraryMemberSimpleInfoRes)},
  { 132, -1, -1, sizeof(::CRYSTAL_NET::service::AddLibraryBookReq)},
  { 150, -1, -1, sizeof(::CRYSTAL_NET::service::AddLibraryBookRes)},
  { 157, -1, -1, sizeof(::CRYSTAL_NET::service::AddLibraryBookCountReq)},
  { 165, -1, -1, sizeof(::CRYSTAL_NET::service::AddLibraryBookCountRes)},
  { 172, -1, -1, sizeof(::CRYSTAL_NET::service::GetBookListReq)},
  { 178, -1, -1, sizeof(::CRYSTAL_NET::service::BookListNty)},
  { 185, -1, -1, sizeof(::CRYSTAL_NET::service::BooksChangeNty)},
  { 192, -1, -1, sizeof(::CRYSTAL_NET::service::BookVariantInfoItemsNty)},
  { 199, -1, -1, sizeof(::CRYSTAL_NET::service::GetBookListRes)},
  { 206, -1, -1, sizeof(::CRYSTAL_NET::service::GetBookInfoReq)},
  { 213, -1, -1, sizeof(::CRYSTAL_NET::service::GetBookInfoRes)},
  { 221, -1, -1, sizeof(::CRYSTAL_NET::service::GetBookByBookNameReq)},
  { 228, -1, -1, sizeof(::CRYSTAL_NET::service::GetBookByBookNameRes)},
  { 235, -1, -1, sizeof(::CRYSTAL_NET::service::GetBookInfoListReq)},
  { 243, -1, -1, sizeof(::CRYSTAL_NET::service::GetBookInfoListRes)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::CRYSTAL_NET::service::_GetLibraryInfoReq_default_instance_._instance,
  &::CRYSTAL_NET::service::_LibraryInfoNty_default_instance_._instance,
  &::CRYSTAL_NET::service::_GetLibraryInfoRes_default_instance_._instance,
  &::CRYSTAL_NET::service::_CreateLibraryReq_default_instance_._instance,
  &::CRYSTAL_NET::service::_CreateLibraryRes_default_instance_._instance,
  &::CRYSTAL_NET::service::_JoinLibraryReq_default_instance_._instance,
  &::CRYSTAL_NET::service::_JoinLibraryRes_default_instance_._instance,
  &::CRYSTAL_NET::service::_QuitLibraryReq_default_instance_._instance,
  &::CRYSTAL_NET::service::_QuitLibraryRes_default_instance_._instance,
  &::CRYSTAL_NET::service::_GetLibraryListReq_default_instance_._instance,
  &::CRYSTAL_NET::service::_GetLibraryListRes_default_instance_._instance,
  &::CRYSTAL_NET::service::_TransferLibraianReq_default_instance_._instance,
  &::CRYSTAL_NET::service::_TransferLibraianRes_default_instance_._instance,
  &::CRYSTAL_NET::service::_ModifyMemberInfoReq_default_instance_._instance,
  &::CRYSTAL_NET::service::_ModifyMemberInfoRes_default_instance_._instance,
  &::CRYSTAL_NET::service::_UserLibraryInfoNty_default_instance_._instance,
  &::CRYSTAL_NET::service::_GetLibraryMemberSimpleInfoReq_default_instance_._instance,
  &::CRYSTAL_NET::service::_GetLibraryMemberSimpleInfoRes_default_instance_._instance,
  &::CRYSTAL_NET::service::_AddLibraryBookReq_default_instance_._instance,
  &::CRYSTAL_NET::service::_AddLibraryBookRes_default_instance_._instance,
  &::CRYSTAL_NET::service::_AddLibraryBookCountReq_default_instance_._instance,
  &::CRYSTAL_NET::service::_AddLibraryBookCountRes_default_instance_._instance,
  &::CRYSTAL_NET::service::_GetBookListReq_default_instance_._instance,
  &::CRYSTAL_NET::service::_BookListNty_default_instance_._instance,
  &::CRYSTAL_NET::service::_BooksChangeNty_default_instance_._instance,
  &::CRYSTAL_NET::service::_BookVariantInfoItemsNty_default_instance_._instance,
  &::CRYSTAL_NET::service::_GetBookListRes_default_instance_._instance,
  &::CRYSTAL_NET::service::_GetBookInfoReq_default_instance_._instance,
  &::CRYSTAL_NET::service::_GetBookInfoRes_default_instance_._instance,
  &::CRYSTAL_NET::service::_GetBookByBookNameReq_default_instance_._instance,
  &::CRYSTAL_NET::service::_GetBookByBookNameRes_default_instance_._instance,
  &::CRYSTAL_NET::service::_GetBookInfoListReq_default_instance_._instance,
  &::CRYSTAL_NET::service::_GetBookInfoListRes_default_instance_._instance,
};

const char descriptor_table_protodef_library_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rlibrary.proto\022\023CRYSTAL_NET.service\032\021co"
  "m_library.proto\032\016com_book.proto\032\016com_use"
  "r.proto\"\023\n\021GetLibraryInfoReq\"G\n\016LibraryI"
  "nfoNty\0225\n\013LibraryInfo\030\001 \001(\0132 .CRYSTAL_NE"
  "T.service.LibraryInfo\"$\n\021GetLibraryInfoR"
  "es\022\017\n\007ErrCode\030\001 \001(\021\"\202\001\n\020CreateLibraryReq"
  "\022\022\n\nInviteCode\030\001 \001(\t\022\014\n\004Name\030\002 \001(\t\022\017\n\007Ad"
  "dress\030\003 \001(\t\022\020\n\010OpenTime\030\004 \001(\t\022\026\n\016Telphon"
  "eNumber\030\005 \001(\t\022\021\n\tBindPhone\030\006 \001(\004\"#\n\020Crea"
  "teLibraryRes\022\017\n\007ErrCode\030\001 \001(\021\"#\n\016JoinLib"
  "raryReq\022\021\n\tLibraryId\030\001 \001(\004\"!\n\016JoinLibrar"
  "yRes\022\017\n\007ErrCode\030\001 \001(\021\"\020\n\016QuitLibraryReq\""
  "!\n\016QuitLibraryRes\022\017\n\007ErrCode\030\001 \001(\021\"\023\n\021Ge"
  "tLibraryListReq\"\\\n\021GetLibraryListRes\022G\n\026"
  "LibraryPreviewInfoList\030\001 \003(\0132\'.CRYSTAL_N"
  "ET.service.LibraryPreviewInfo\"+\n\023Transfe"
  "rLibraianReq\022\024\n\014TargetUserId\030\001 \001(\004\"&\n\023Tr"
  "ansferLibraianRes\022\017\n\007ErrCode\030\001 \001(\021\"{\n\023Mo"
  "difyMemberInfoReq\022\024\n\014memberUserId\030\001 \001(\004\022"
  "\021\n\007newRole\030\002 \001(\021H\000\022\030\n\016newMemberPhone\030\003 \001"
  "(\004H\001B\014\n\nModifyRoleB\023\n\021ModifyPhoneNumber\""
  "&\n\023ModifyMemberInfoRes\022\017\n\007ErrCode\030\001 \001(\021\""
  "S\n\022UserLibraryInfoNty\022=\n\017UserLibraryInfo"
  "\030\001 \001(\0132$.CRYSTAL_NET.service.UserLibrary"
  "Info\"\037\n\035GetLibraryMemberSimpleInfoReq\"q\n"
  "\035GetLibraryMemberSimpleInfoRes\022\017\n\007ErrCod"
  "e\030\001 \001(\021\022\?\n\022SimpleUserInfoList\030\002 \003(\0132#.CR"
  "YSTAL_NET.service.SimpleUserInfo\"\305\002\n\021Add"
  "LibraryBookReq\022\020\n\010BookName\030\001 \001(\t\022\020\n\010Isbn"
  "Code\030\002 \001(\t\022\030\n\016BookCoverImage\030\003 \001(\tH\000\022\r\n\005"
  "Price\030\004 \001(\022\022\023\n\013ModifyCount\030\005 \001(\022\0226\n\010KeyW"
  "ords\030\006 \001(\0132\".CRYSTAL_NET.service.KeyWord"
  "sFieldH\001\022\021\n\007Content\030\007 \001(\tH\002\0226\n\010Snapshot\030"
  "\010 \001(\0132\".CRYSTAL_NET.service.SnapshotFiel"
  "dH\003B\026\n\024BookCoverImageOptionB\020\n\016KeyWordsO"
  "ptionB\017\n\rContentOptionB\020\n\016SnapshotOption"
  "\"$\n\021AddLibraryBookRes\022\017\n\007ErrCode\030\001 \001(\021\"="
  "\n\026AddLibraryBookCountReq\022\016\n\006BookId\030\001 \001(\004"
  "\022\023\n\013ModifyCount\030\002 \001(\022\")\n\026AddLibraryBookC"
  "ountRes\022\017\n\007ErrCode\030\001 \001(\021\"\020\n\016GetBookListR"
  "eq\"B\n\013BookListNty\0223\n\014BookInfoList\030\001 \003(\0132"
  "\035.CRYSTAL_NET.service.BookInfo\"E\n\016BooksC"
  "hangeNty\0223\n\014BookInfoList\030\001 \003(\0132\035.CRYSTAL"
  "_NET.service.BookInfo\"d\n\027BookVariantInfo"
  "ItemsNty\022I\n\027BookVariantInfoItemList\030\001 \003("
  "\0132(.CRYSTAL_NET.service.BookVariantInfoI"
  "tem\"!\n\016GetBookListRes\022\017\n\007ErrCode\030\001 \001(\021\"\""
  "\n\016GetBookInfoReq\022\020\n\010IsbnCode\030\001 \001(\t\"R\n\016Ge"
  "tBookInfoRes\022\017\n\007ErrCode\030\001 \001(\021\022/\n\010BookInf"
  "o\030\002 \001(\0132\035.CRYSTAL_NET.service.BookInfo\"("
  "\n\024GetBookByBookNameReq\022\020\n\010BookName\030\001 \001(\t"
  "\"K\n\024GetBookByBookNameRes\0223\n\014BookInfoList"
  "\030\001 \003(\0132\035.CRYSTAL_NET.service.BookInfo\";\n"
  "\022GetBookInfoListReq\022\022\n\nBaseBookId\030\001 \001(\004\022"
  "\021\n\tBookCount\030\002 \001(\021\"I\n\022GetBookInfoListRes"
  "\0223\n\014BookInfoList\030\001 \003(\0132\035.CRYSTAL_NET.ser"
  "vice.BookInfob\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_library_2eproto_deps[3] = {
  &::descriptor_table_com_5fbook_2eproto,
  &::descriptor_table_com_5flibrary_2eproto,
  &::descriptor_table_com_5fuser_2eproto,
};
static ::_pbi::once_flag descriptor_table_library_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_library_2eproto = {
    false, false, 2261, descriptor_table_protodef_library_2eproto,
    "library.proto",
    &descriptor_table_library_2eproto_once, descriptor_table_library_2eproto_deps, 3, 33,
    schemas, file_default_instances, TableStruct_library_2eproto::offsets,
    file_level_metadata_library_2eproto, file_level_enum_descriptors_library_2eproto,
    file_level_service_descriptors_library_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_library_2eproto_getter() {
  return &descriptor_table_library_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_library_2eproto(&descriptor_table_library_2eproto);
namespace CRYSTAL_NET {
namespace service {

// ===================================================================

class GetLibraryInfoReq::_Internal {
 public:
};

GetLibraryInfoReq::GetLibraryInfoReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CRYSTAL_NET.service.GetLibraryInfoReq)
}
GetLibraryInfoReq::GetLibraryInfoReq(const GetLibraryInfoReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetLibraryInfoReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CRYSTAL_NET.service.GetLibraryInfoReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLibraryInfoReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLibraryInfoReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetLibraryInfoReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_library_2eproto_getter, &descriptor_table_library_2eproto_once,
      file_level_metadata_library_2eproto[0]);
}

// ===================================================================

class LibraryInfoNty::_Internal {
 public:
  static const ::CRYSTAL_NET::service::LibraryInfo& libraryinfo(const LibraryInfoNty* msg);
};

const ::CRYSTAL_NET::service::LibraryInfo&
LibraryInfoNty::_Internal::libraryinfo(const LibraryInfoNty* msg) {
  return *msg->_impl_.libraryinfo_;
}
void LibraryInfoNty::clear_libraryinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.libraryinfo_ != nullptr) {
    delete _impl_.libraryinfo_;
  }
  _impl_.libraryinfo_ = nullptr;
}
LibraryInfoNty::LibraryInfoNty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CRYSTAL_NET.service.LibraryInfoNty)
}
LibraryInfoNty::LibraryInfoNty(const LibraryInfoNty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LibraryInfoNty* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.libraryinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_libraryinfo()) {
    _this->_impl_.libraryinfo_ = new ::CRYSTAL_NET::service::LibraryInfo(*from._impl_.libraryinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:CRYSTAL_NET.service.LibraryInfoNty)
}

inline void LibraryInfoNty::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.libraryinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

LibraryInfoNty::~LibraryInfoNty() {
  // @@protoc_insertion_point(destructor:CRYSTAL_NET.service.LibraryInfoNty)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LibraryInfoNty::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.libraryinfo_;
}

void LibraryInfoNty::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LibraryInfoNty::Clear() {
// @@protoc_insertion_point(message_clear_start:CRYSTAL_NET.service.LibraryInfoNty)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.libraryinfo_ != nullptr) {
    delete _impl_.libraryinfo_;
  }
  _impl_.libraryinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LibraryInfoNty::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .CRYSTAL_NET.service.LibraryInfo LibraryInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_libraryinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LibraryInfoNty::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CRYSTAL_NET.service.LibraryInfoNty)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .CRYSTAL_NET.service.LibraryInfo LibraryInfo = 1;
  if (this->_internal_has_libraryinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::libraryinfo(this),
        _Internal::libraryinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CRYSTAL_NET.service.LibraryInfoNty)
  return target;
}

size_t LibraryInfoNty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CRYSTAL_NET.service.LibraryInfoNty)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .CRYSTAL_NET.service.LibraryInfo LibraryInfo = 1;
  if (this->_internal_has_libraryinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.libraryinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LibraryInfoNty::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LibraryInfoNty::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LibraryInfoNty::GetClassData() const { return &_class_data_; }


void LibraryInfoNty::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LibraryInfoNty*>(&to_msg);
  auto& from = static_cast<const LibraryInfoNty&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CRYSTAL_NET.service.LibraryInfoNty)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_libraryinfo()) {
    _this->_internal_mutable_libraryinfo()->::CRYSTAL_NET::service::LibraryInfo::MergeFrom(
        from._internal_libraryinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LibraryInfoNty::CopyFrom(const LibraryInfoNty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CRYSTAL_NET.service.LibraryInfoNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LibraryInfoNty::IsInitialized() const {
  return true;
}

void LibraryInfoNty::InternalSwap(LibraryInfoNty* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.libraryinfo_, other->_impl_.libraryinfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LibraryInfoNty::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_library_2eproto_getter, &descriptor_table_library_2eproto_once,
      file_level_metadata_library_2eproto[1]);
}

// ===================================================================

class GetLibraryInfoRes::_Internal {
 public:
};

GetLibraryInfoRes::GetLibraryInfoRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CRYSTAL_NET.service.GetLibraryInfoRes)
}
GetLibraryInfoRes::GetLibraryInfoRes(const GetLibraryInfoRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetLibraryInfoRes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.errcode_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.errcode_ = from._impl_.errcode_;
  // @@protoc_insertion_point(copy_constructor:CRYSTAL_NET.service.GetLibraryInfoRes)
}

inline void GetLibraryInfoRes::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.errcode_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetLibraryInfoRes::~GetLibraryInfoRes() {
  // @@protoc_insertion_point(destructor:CRYSTAL_NET.service.GetLibraryInfoRes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetLibraryInfoRes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetLibraryInfoRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetLibraryInfoRes::Clear() {
// @@protoc_insertion_point(message_clear_start:CRYSTAL_NET.service.GetLibraryInfoRes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.errcode_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLibraryInfoRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 ErrCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.errcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetLibraryInfoRes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CRYSTAL_NET.service.GetLibraryInfoRes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 ErrCode = 1;
  if (this->_internal_errcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_errcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CRYSTAL_NET.service.GetLibraryInfoRes)
  return target;
}

size_t GetLibraryInfoRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CRYSTAL_NET.service.GetLibraryInfoRes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 ErrCode = 1;
  if (this->_internal_errcode() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_errcode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLibraryInfoRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetLibraryInfoRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLibraryInfoRes::GetClassData() const { return &_class_data_; }


void GetLibraryInfoRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetLibraryInfoRes*>(&to_msg);
  auto& from = static_cast<const GetLibraryInfoRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CRYSTAL_NET.service.GetLibraryInfoRes)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_errcode() != 0) {
    _this->_internal_set_errcode(from._internal_errcode());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetLibraryInfoRes::CopyFrom(const GetLibraryInfoRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CRYSTAL_NET.service.GetLibraryInfoRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLibraryInfoRes::IsInitialized() const {
  return true;
}

void GetLibraryInfoRes::InternalSwap(GetLibraryInfoRes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.errcode_, other->_impl_.errcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLibraryInfoRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_library_2eproto_getter, &descriptor_table_library_2eproto_once,
      file_level_metadata_library_2eproto[2]);
}

// ===================================================================

class CreateLibraryReq::_Internal {
 public:
};

CreateLibraryReq::CreateLibraryReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CRYSTAL_NET.service.CreateLibraryReq)
}
CreateLibraryReq::CreateLibraryReq(const CreateLibraryReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateLibraryReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.invitecode_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.address_){}
    , decltype(_impl_.opentime_){}
    , decltype(_impl_.telphonenumber_){}
    , decltype(_impl_.bindphone_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.invitecode_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.invitecode_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_invitecode().empty()) {
    _this->_impl_.invitecode_.Set(from._internal_invitecode(), 
      _this->GetArenaForAllocation());
  }
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_address().empty()) {
    _this->_impl_.address_.Set(from._internal_address(), 
      _this->GetArenaForAllocation());
  }
  _impl_.opentime_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.opentime_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_opentime().empty()) {
    _this->_impl_.opentime_.Set(from._internal_opentime(), 
      _this->GetArenaForAllocation());
  }
  _impl_.telphonenumber_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.telphonenumber_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_telphonenumber().empty()) {
    _this->_impl_.telphonenumber_.Set(from._internal_telphonenumber(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.bindphone_ = from._impl_.bindphone_;
  // @@protoc_insertion_point(copy_constructor:CRYSTAL_NET.service.CreateLibraryReq)
}

inline void CreateLibraryReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.invitecode_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.address_){}
    , decltype(_impl_.opentime_){}
    , decltype(_impl_.telphonenumber_){}
    , decltype(_impl_.bindphone_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.invitecode_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.invitecode_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.opentime_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.opentime_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.telphonenumber_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.telphonenumber_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateLibraryReq::~CreateLibraryReq() {
  // @@protoc_insertion_point(destructor:CRYSTAL_NET.service.CreateLibraryReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateLibraryReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.invitecode_.Destroy();
  _impl_.name_.Destroy();
  _impl_.address_.Destroy();
  _impl_.opentime_.Destroy();
  _impl_.telphonenumber_.Destroy();
}

void CreateLibraryReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateLibraryReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CRYSTAL_NET.service.CreateLibraryReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.invitecode_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.address_.ClearToEmpty();
  _impl_.opentime_.ClearToEmpty();
  _impl_.telphonenumber_.ClearToEmpty();
  _impl_.bindphone_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateLibraryReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string InviteCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_invitecode();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "CRYSTAL_NET.service.CreateLibraryReq.InviteCode"));
        } else
          goto handle_unusual;
        continue;
      // string Name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "CRYSTAL_NET.service.CreateLibraryReq.Name"));
        } else
          goto handle_unusual;
        continue;
      // string Address = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "CRYSTAL_NET.service.CreateLibraryReq.Address"));
        } else
          goto handle_unusual;
        continue;
      // string OpenTime = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_opentime();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "CRYSTAL_NET.service.CreateLibraryReq.OpenTime"));
        } else
          goto handle_unusual;
        continue;
      // string TelphoneNumber = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_telphonenumber();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "CRYSTAL_NET.service.CreateLibraryReq.TelphoneNumber"));
        } else
          goto handle_unusual;
        continue;
      // uint64 BindPhone = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.bindphone_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateLibraryReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CRYSTAL_NET.service.CreateLibraryReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string InviteCode = 1;
  if (!this->_internal_invitecode().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_invitecode().data(), static_cast<int>(this->_internal_invitecode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "CRYSTAL_NET.service.CreateLibraryReq.InviteCode");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_invitecode(), target);
  }

  // string Name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "CRYSTAL_NET.service.CreateLibraryReq.Name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string Address = 3;
  if (!this->_internal_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_address().data(), static_cast<int>(this->_internal_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "CRYSTAL_NET.service.CreateLibraryReq.Address");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_address(), target);
  }

  // string OpenTime = 4;
  if (!this->_internal_opentime().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_opentime().data(), static_cast<int>(this->_internal_opentime().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "CRYSTAL_NET.service.CreateLibraryReq.OpenTime");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_opentime(), target);
  }

  // string TelphoneNumber = 5;
  if (!this->_internal_telphonenumber().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_telphonenumber().data(), static_cast<int>(this->_internal_telphonenumber().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "CRYSTAL_NET.service.CreateLibraryReq.TelphoneNumber");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_telphonenumber(), target);
  }

  // uint64 BindPhone = 6;
  if (this->_internal_bindphone() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(6, this->_internal_bindphone(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CRYSTAL_NET.service.CreateLibraryReq)
  return target;
}

size_t CreateLibraryReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CRYSTAL_NET.service.CreateLibraryReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string InviteCode = 1;
  if (!this->_internal_invitecode().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_invitecode());
  }

  // string Name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string Address = 3;
  if (!this->_internal_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_address());
  }

  // string OpenTime = 4;
  if (!this->_internal_opentime().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_opentime());
  }

  // string TelphoneNumber = 5;
  if (!this->_internal_telphonenumber().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_telphonenumber());
  }

  // uint64 BindPhone = 6;
  if (this->_internal_bindphone() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_bindphone());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateLibraryReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateLibraryReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateLibraryReq::GetClassData() const { return &_class_data_; }


void CreateLibraryReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateLibraryReq*>(&to_msg);
  auto& from = static_cast<const CreateLibraryReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CRYSTAL_NET.service.CreateLibraryReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_invitecode().empty()) {
    _this->_internal_set_invitecode(from._internal_invitecode());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  if (!from._internal_opentime().empty()) {
    _this->_internal_set_opentime(from._internal_opentime());
  }
  if (!from._internal_telphonenumber().empty()) {
    _this->_internal_set_telphonenumber(from._internal_telphonenumber());
  }
  if (from._internal_bindphone() != 0) {
    _this->_internal_set_bindphone(from._internal_bindphone());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateLibraryReq::CopyFrom(const CreateLibraryReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CRYSTAL_NET.service.CreateLibraryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateLibraryReq::IsInitialized() const {
  return true;
}

void CreateLibraryReq::InternalSwap(CreateLibraryReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.invitecode_, lhs_arena,
      &other->_impl_.invitecode_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.address_, lhs_arena,
      &other->_impl_.address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.opentime_, lhs_arena,
      &other->_impl_.opentime_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.telphonenumber_, lhs_arena,
      &other->_impl_.telphonenumber_, rhs_arena
  );
  swap(_impl_.bindphone_, other->_impl_.bindphone_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateLibraryReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_library_2eproto_getter, &descriptor_table_library_2eproto_once,
      file_level_metadata_library_2eproto[3]);
}

// ===================================================================

class CreateLibraryRes::_Internal {
 public:
};

CreateLibraryRes::CreateLibraryRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CRYSTAL_NET.service.CreateLibraryRes)
}
CreateLibraryRes::CreateLibraryRes(const CreateLibraryRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateLibraryRes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.errcode_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.errcode_ = from._impl_.errcode_;
  // @@protoc_insertion_point(copy_constructor:CRYSTAL_NET.service.CreateLibraryRes)
}

inline void CreateLibraryRes::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.errcode_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CreateLibraryRes::~CreateLibraryRes() {
  // @@protoc_insertion_point(destructor:CRYSTAL_NET.service.CreateLibraryRes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateLibraryRes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CreateLibraryRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateLibraryRes::Clear() {
// @@protoc_insertion_point(message_clear_start:CRYSTAL_NET.service.CreateLibraryRes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.errcode_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateLibraryRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 ErrCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.errcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateLibraryRes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CRYSTAL_NET.service.CreateLibraryRes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 ErrCode = 1;
  if (this->_internal_errcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_errcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CRYSTAL_NET.service.CreateLibraryRes)
  return target;
}

size_t CreateLibraryRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CRYSTAL_NET.service.CreateLibraryRes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 ErrCode = 1;
  if (this->_internal_errcode() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_errcode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateLibraryRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateLibraryRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateLibraryRes::GetClassData() const { return &_class_data_; }


void CreateLibraryRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateLibraryRes*>(&to_msg);
  auto& from = static_cast<const CreateLibraryRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CRYSTAL_NET.service.CreateLibraryRes)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_errcode() != 0) {
    _this->_internal_set_errcode(from._internal_errcode());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateLibraryRes::CopyFrom(const CreateLibraryRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CRYSTAL_NET.service.CreateLibraryRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateLibraryRes::IsInitialized() const {
  return true;
}

void CreateLibraryRes::InternalSwap(CreateLibraryRes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.errcode_, other->_impl_.errcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateLibraryRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_library_2eproto_getter, &descriptor_table_library_2eproto_once,
      file_level_metadata_library_2eproto[4]);
}

// ===================================================================

class JoinLibraryReq::_Internal {
 public:
};

JoinLibraryReq::JoinLibraryReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CRYSTAL_NET.service.JoinLibraryReq)
}
JoinLibraryReq::JoinLibraryReq(const JoinLibraryReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  JoinLibraryReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.libraryid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.libraryid_ = from._impl_.libraryid_;
  // @@protoc_insertion_point(copy_constructor:CRYSTAL_NET.service.JoinLibraryReq)
}

inline void JoinLibraryReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.libraryid_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

JoinLibraryReq::~JoinLibraryReq() {
  // @@protoc_insertion_point(destructor:CRYSTAL_NET.service.JoinLibraryReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void JoinLibraryReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void JoinLibraryReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void JoinLibraryReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CRYSTAL_NET.service.JoinLibraryReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.libraryid_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JoinLibraryReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 LibraryId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.libraryid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* JoinLibraryReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CRYSTAL_NET.service.JoinLibraryReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 LibraryId = 1;
  if (this->_internal_libraryid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_libraryid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CRYSTAL_NET.service.JoinLibraryReq)
  return target;
}

size_t JoinLibraryReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CRYSTAL_NET.service.JoinLibraryReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 LibraryId = 1;
  if (this->_internal_libraryid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_libraryid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData JoinLibraryReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    JoinLibraryReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*JoinLibraryReq::GetClassData() const { return &_class_data_; }


void JoinLibraryReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<JoinLibraryReq*>(&to_msg);
  auto& from = static_cast<const JoinLibraryReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CRYSTAL_NET.service.JoinLibraryReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_libraryid() != 0) {
    _this->_internal_set_libraryid(from._internal_libraryid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void JoinLibraryReq::CopyFrom(const JoinLibraryReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CRYSTAL_NET.service.JoinLibraryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinLibraryReq::IsInitialized() const {
  return true;
}

void JoinLibraryReq::InternalSwap(JoinLibraryReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.libraryid_, other->_impl_.libraryid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata JoinLibraryReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_library_2eproto_getter, &descriptor_table_library_2eproto_once,
      file_level_metadata_library_2eproto[5]);
}

// ===================================================================

class JoinLibraryRes::_Internal {
 public:
};

JoinLibraryRes::JoinLibraryRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CRYSTAL_NET.service.JoinLibraryRes)
}
JoinLibraryRes::JoinLibraryRes(const JoinLibraryRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  JoinLibraryRes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.errcode_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.errcode_ = from._impl_.errcode_;
  // @@protoc_insertion_point(copy_constructor:CRYSTAL_NET.service.JoinLibraryRes)
}

inline void JoinLibraryRes::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.errcode_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

JoinLibraryRes::~JoinLibraryRes() {
  // @@protoc_insertion_point(destructor:CRYSTAL_NET.service.JoinLibraryRes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void JoinLibraryRes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void JoinLibraryRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void JoinLibraryRes::Clear() {
// @@protoc_insertion_point(message_clear_start:CRYSTAL_NET.service.JoinLibraryRes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.errcode_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JoinLibraryRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 ErrCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.errcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* JoinLibraryRes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CRYSTAL_NET.service.JoinLibraryRes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 ErrCode = 1;
  if (this->_internal_errcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_errcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CRYSTAL_NET.service.JoinLibraryRes)
  return target;
}

size_t JoinLibraryRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CRYSTAL_NET.service.JoinLibraryRes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 ErrCode = 1;
  if (this->_internal_errcode() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_errcode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData JoinLibraryRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    JoinLibraryRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*JoinLibraryRes::GetClassData() const { return &_class_data_; }


void JoinLibraryRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<JoinLibraryRes*>(&to_msg);
  auto& from = static_cast<const JoinLibraryRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CRYSTAL_NET.service.JoinLibraryRes)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_errcode() != 0) {
    _this->_internal_set_errcode(from._internal_errcode());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void JoinLibraryRes::CopyFrom(const JoinLibraryRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CRYSTAL_NET.service.JoinLibraryRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinLibraryRes::IsInitialized() const {
  return true;
}

void JoinLibraryRes::InternalSwap(JoinLibraryRes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.errcode_, other->_impl_.errcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata JoinLibraryRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_library_2eproto_getter, &descriptor_table_library_2eproto_once,
      file_level_metadata_library_2eproto[6]);
}

// ===================================================================

class QuitLibraryReq::_Internal {
 public:
};

QuitLibraryReq::QuitLibraryReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CRYSTAL_NET.service.QuitLibraryReq)
}
QuitLibraryReq::QuitLibraryReq(const QuitLibraryReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  QuitLibraryReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CRYSTAL_NET.service.QuitLibraryReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QuitLibraryReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QuitLibraryReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata QuitLibraryReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_library_2eproto_getter, &descriptor_table_library_2eproto_once,
      file_level_metadata_library_2eproto[7]);
}

// ===================================================================

class QuitLibraryRes::_Internal {
 public:
};

QuitLibraryRes::QuitLibraryRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CRYSTAL_NET.service.QuitLibraryRes)
}
QuitLibraryRes::QuitLibraryRes(const QuitLibraryRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QuitLibraryRes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.errcode_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.errcode_ = from._impl_.errcode_;
  // @@protoc_insertion_point(copy_constructor:CRYSTAL_NET.service.QuitLibraryRes)
}

inline void QuitLibraryRes::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.errcode_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QuitLibraryRes::~QuitLibraryRes() {
  // @@protoc_insertion_point(destructor:CRYSTAL_NET.service.QuitLibraryRes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QuitLibraryRes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void QuitLibraryRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QuitLibraryRes::Clear() {
// @@protoc_insertion_point(message_clear_start:CRYSTAL_NET.service.QuitLibraryRes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.errcode_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QuitLibraryRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 ErrCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.errcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* QuitLibraryRes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CRYSTAL_NET.service.QuitLibraryRes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 ErrCode = 1;
  if (this->_internal_errcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_errcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CRYSTAL_NET.service.QuitLibraryRes)
  return target;
}

size_t QuitLibraryRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CRYSTAL_NET.service.QuitLibraryRes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 ErrCode = 1;
  if (this->_internal_errcode() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_errcode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QuitLibraryRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QuitLibraryRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QuitLibraryRes::GetClassData() const { return &_class_data_; }


void QuitLibraryRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QuitLibraryRes*>(&to_msg);
  auto& from = static_cast<const QuitLibraryRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CRYSTAL_NET.service.QuitLibraryRes)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_errcode() != 0) {
    _this->_internal_set_errcode(from._internal_errcode());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QuitLibraryRes::CopyFrom(const QuitLibraryRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CRYSTAL_NET.service.QuitLibraryRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuitLibraryRes::IsInitialized() const {
  return true;
}

void QuitLibraryRes::InternalSwap(QuitLibraryRes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.errcode_, other->_impl_.errcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QuitLibraryRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_library_2eproto_getter, &descriptor_table_library_2eproto_once,
      file_level_metadata_library_2eproto[8]);
}

// ===================================================================

class GetLibraryListReq::_Internal {
 public:
};

GetLibraryListReq::GetLibraryListReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CRYSTAL_NET.service.GetLibraryListReq)
}
GetLibraryListReq::GetLibraryListReq(const GetLibraryListReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetLibraryListReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CRYSTAL_NET.service.GetLibraryListReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLibraryListReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLibraryListReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetLibraryListReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_library_2eproto_getter, &descriptor_table_library_2eproto_once,
      file_level_metadata_library_2eproto[9]);
}

// ===================================================================

class GetLibraryListRes::_Internal {
 public:
};

void GetLibraryListRes::clear_librarypreviewinfolist() {
  _impl_.librarypreviewinfolist_.Clear();
}
GetLibraryListRes::GetLibraryListRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CRYSTAL_NET.service.GetLibraryListRes)
}
GetLibraryListRes::GetLibraryListRes(const GetLibraryListRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetLibraryListRes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.librarypreviewinfolist_){from._impl_.librarypreviewinfolist_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CRYSTAL_NET.service.GetLibraryListRes)
}

inline void GetLibraryListRes::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.librarypreviewinfolist_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetLibraryListRes::~GetLibraryListRes() {
  // @@protoc_insertion_point(destructor:CRYSTAL_NET.service.GetLibraryListRes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetLibraryListRes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.librarypreviewinfolist_.~RepeatedPtrField();
}

void GetLibraryListRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetLibraryListRes::Clear() {
// @@protoc_insertion_point(message_clear_start:CRYSTAL_NET.service.GetLibraryListRes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.librarypreviewinfolist_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLibraryListRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .CRYSTAL_NET.service.LibraryPreviewInfo LibraryPreviewInfoList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_librarypreviewinfolist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetLibraryListRes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CRYSTAL_NET.service.GetLibraryListRes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CRYSTAL_NET.service.LibraryPreviewInfo LibraryPreviewInfoList = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_librarypreviewinfolist_size()); i < n; i++) {
    const auto& repfield = this->_internal_librarypreviewinfolist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CRYSTAL_NET.service.GetLibraryListRes)
  return target;
}

size_t GetLibraryListRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CRYSTAL_NET.service.GetLibraryListRes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CRYSTAL_NET.service.LibraryPreviewInfo LibraryPreviewInfoList = 1;
  total_size += 1UL * this->_internal_librarypreviewinfolist_size();
  for (const auto& msg : this->_impl_.librarypreviewinfolist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLibraryListRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetLibraryListRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLibraryListRes::GetClassData() const { return &_class_data_; }


void GetLibraryListRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetLibraryListRes*>(&to_msg);
  auto& from = static_cast<const GetLibraryListRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CRYSTAL_NET.service.GetLibraryListRes)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.librarypreviewinfolist_.MergeFrom(from._impl_.librarypreviewinfolist_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetLibraryListRes::CopyFrom(const GetLibraryListRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CRYSTAL_NET.service.GetLibraryListRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLibraryListRes::IsInitialized() const {
  return true;
}

void GetLibraryListRes::InternalSwap(GetLibraryListRes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.librarypreviewinfolist_.InternalSwap(&other->_impl_.librarypreviewinfolist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLibraryListRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_library_2eproto_getter, &descriptor_table_library_2eproto_once,
      file_level_metadata_library_2eproto[10]);
}

// ===================================================================

class TransferLibraianReq::_Internal {
 public:
};

TransferLibraianReq::TransferLibraianReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CRYSTAL_NET.service.TransferLibraianReq)
}
TransferLibraianReq::TransferLibraianReq(const TransferLibraianReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TransferLibraianReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.targetuserid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.targetuserid_ = from._impl_.targetuserid_;
  // @@protoc_insertion_point(copy_constructor:CRYSTAL_NET.service.TransferLibraianReq)
}

inline void TransferLibraianReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.targetuserid_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TransferLibraianReq::~TransferLibraianReq() {
  // @@protoc_insertion_point(destructor:CRYSTAL_NET.service.TransferLibraianReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransferLibraianReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TransferLibraianReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TransferLibraianReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CRYSTAL_NET.service.TransferLibraianReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.targetuserid_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransferLibraianReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 TargetUserId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.targetuserid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransferLibraianReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CRYSTAL_NET.service.TransferLibraianReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 TargetUserId = 1;
  if (this->_internal_targetuserid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_targetuserid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CRYSTAL_NET.service.TransferLibraianReq)
  return target;
}

size_t TransferLibraianReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CRYSTAL_NET.service.TransferLibraianReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 TargetUserId = 1;
  if (this->_internal_targetuserid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_targetuserid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransferLibraianReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TransferLibraianReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransferLibraianReq::GetClassData() const { return &_class_data_; }


void TransferLibraianReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TransferLibraianReq*>(&to_msg);
  auto& from = static_cast<const TransferLibraianReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CRYSTAL_NET.service.TransferLibraianReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_targetuserid() != 0) {
    _this->_internal_set_targetuserid(from._internal_targetuserid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransferLibraianReq::CopyFrom(const TransferLibraianReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CRYSTAL_NET.service.TransferLibraianReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferLibraianReq::IsInitialized() const {
  return true;
}

void TransferLibraianReq::InternalSwap(TransferLibraianReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.targetuserid_, other->_impl_.targetuserid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TransferLibraianReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_library_2eproto_getter, &descriptor_table_library_2eproto_once,
      file_level_metadata_library_2eproto[11]);
}

// ===================================================================

class TransferLibraianRes::_Internal {
 public:
};

TransferLibraianRes::TransferLibraianRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CRYSTAL_NET.service.TransferLibraianRes)
}
TransferLibraianRes::TransferLibraianRes(const TransferLibraianRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TransferLibraianRes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.errcode_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.errcode_ = from._impl_.errcode_;
  // @@protoc_insertion_point(copy_constructor:CRYSTAL_NET.service.TransferLibraianRes)
}

inline void TransferLibraianRes::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.errcode_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TransferLibraianRes::~TransferLibraianRes() {
  // @@protoc_insertion_point(destructor:CRYSTAL_NET.service.TransferLibraianRes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TransferLibraianRes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TransferLibraianRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TransferLibraianRes::Clear() {
// @@protoc_insertion_point(message_clear_start:CRYSTAL_NET.service.TransferLibraianRes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.errcode_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransferLibraianRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 ErrCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.errcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TransferLibraianRes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CRYSTAL_NET.service.TransferLibraianRes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 ErrCode = 1;
  if (this->_internal_errcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_errcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CRYSTAL_NET.service.TransferLibraianRes)
  return target;
}

size_t TransferLibraianRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CRYSTAL_NET.service.TransferLibraianRes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 ErrCode = 1;
  if (this->_internal_errcode() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_errcode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TransferLibraianRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TransferLibraianRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TransferLibraianRes::GetClassData() const { return &_class_data_; }


void TransferLibraianRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TransferLibraianRes*>(&to_msg);
  auto& from = static_cast<const TransferLibraianRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CRYSTAL_NET.service.TransferLibraianRes)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_errcode() != 0) {
    _this->_internal_set_errcode(from._internal_errcode());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TransferLibraianRes::CopyFrom(const TransferLibraianRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CRYSTAL_NET.service.TransferLibraianRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferLibraianRes::IsInitialized() const {
  return true;
}

void TransferLibraianRes::InternalSwap(TransferLibraianRes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.errcode_, other->_impl_.errcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TransferLibraianRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_library_2eproto_getter, &descriptor_table_library_2eproto_once,
      file_level_metadata_library_2eproto[12]);
}

// ===================================================================

class ModifyMemberInfoReq::_Internal {
 public:
};

ModifyMemberInfoReq::ModifyMemberInfoReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CRYSTAL_NET.service.ModifyMemberInfoReq)
}
ModifyMemberInfoReq::ModifyMemberInfoReq(const ModifyMemberInfoReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ModifyMemberInfoReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.memberuserid_){}
    , decltype(_impl_.ModifyRole_){}
    , decltype(_impl_.ModifyPhoneNumber_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.memberuserid_ = from._impl_.memberuserid_;
  clear_has_ModifyRole();
  switch (from.ModifyRole_case()) {
    case kNewRole: {
      _this->_internal_set_newrole(from._internal_newrole());
      break;
    }
    case MODIFYROLE_NOT_SET: {
      break;
    }
  }
  clear_has_ModifyPhoneNumber();
  switch (from.ModifyPhoneNumber_case()) {
    case kNewMemberPhone: {
      _this->_internal_set_newmemberphone(from._internal_newmemberphone());
      break;
    }
    case MODIFYPHONENUMBER_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:CRYSTAL_NET.service.ModifyMemberInfoReq)
}

inline void ModifyMemberInfoReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.memberuserid_){uint64_t{0u}}
    , decltype(_impl_.ModifyRole_){}
    , decltype(_impl_.ModifyPhoneNumber_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_ModifyRole();
  clear_has_ModifyPhoneNumber();
}

ModifyMemberInfoReq::~ModifyMemberInfoReq() {
  // @@protoc_insertion_point(destructor:CRYSTAL_NET.service.ModifyMemberInfoReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModifyMemberInfoReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_ModifyRole()) {
    clear_ModifyRole();
  }
  if (has_ModifyPhoneNumber()) {
    clear_ModifyPhoneNumber();
  }
}

void ModifyMemberInfoReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ModifyMemberInfoReq::clear_ModifyRole() {
// @@protoc_insertion_point(one_of_clear_start:CRYSTAL_NET.service.ModifyMemberInfoReq)
  switch (ModifyRole_case()) {
    case kNewRole: {
      // No need to clear
      break;
    }
    case MODIFYROLE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MODIFYROLE_NOT_SET;
}

void ModifyMemberInfoReq::clear_ModifyPhoneNumber() {
// @@protoc_insertion_point(one_of_clear_start:CRYSTAL_NET.service.ModifyMemberInfoReq)
  switch (ModifyPhoneNumber_case()) {
    case kNewMemberPhone: {
      // No need to clear
      break;
    }
    case MODIFYPHONENUMBER_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[1] = MODIFYPHONENUMBER_NOT_SET;
}


void ModifyMemberInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CRYSTAL_NET.service.ModifyMemberInfoReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.memberuserid_ = uint64_t{0u};
  clear_ModifyRole();
  clear_ModifyPhoneNumber();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModifyMemberInfoReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 memberUserId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.memberuserid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 newRole = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _internal_set_newrole(::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 newMemberPhone = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _internal_set_newmemberphone(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModifyMemberInfoReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CRYSTAL_NET.service.ModifyMemberInfoReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 memberUserId = 1;
  if (this->_internal_memberuserid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_memberuserid(), target);
  }

  // sint32 newRole = 2;
  if (_internal_has_newrole()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(2, this->_internal_newrole(), target);
  }

  // uint64 newMemberPhone = 3;
  if (_internal_has_newmemberphone()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_newmemberphone(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CRYSTAL_NET.service.ModifyMemberInfoReq)
  return target;
}

size_t ModifyMemberInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CRYSTAL_NET.service.ModifyMemberInfoReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 memberUserId = 1;
  if (this->_internal_memberuserid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_memberuserid());
  }

  switch (ModifyRole_case()) {
    // sint32 newRole = 2;
    case kNewRole: {
      total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_newrole());
      break;
    }
    case MODIFYROLE_NOT_SET: {
      break;
    }
  }
  switch (ModifyPhoneNumber_case()) {
    // uint64 newMemberPhone = 3;
    case kNewMemberPhone: {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_newmemberphone());
      break;
    }
    case MODIFYPHONENUMBER_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModifyMemberInfoReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ModifyMemberInfoReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModifyMemberInfoReq::GetClassData() const { return &_class_data_; }


void ModifyMemberInfoReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ModifyMemberInfoReq*>(&to_msg);
  auto& from = static_cast<const ModifyMemberInfoReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CRYSTAL_NET.service.ModifyMemberInfoReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_memberuserid() != 0) {
    _this->_internal_set_memberuserid(from._internal_memberuserid());
  }
  switch (from.ModifyRole_case()) {
    case kNewRole: {
      _this->_internal_set_newrole(from._internal_newrole());
      break;
    }
    case MODIFYROLE_NOT_SET: {
      break;
    }
  }
  switch (from.ModifyPhoneNumber_case()) {
    case kNewMemberPhone: {
      _this->_internal_set_newmemberphone(from._internal_newmemberphone());
      break;
    }
    case MODIFYPHONENUMBER_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModifyMemberInfoReq::CopyFrom(const ModifyMemberInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CRYSTAL_NET.service.ModifyMemberInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyMemberInfoReq::IsInitialized() const {
  return true;
}

void ModifyMemberInfoReq::InternalSwap(ModifyMemberInfoReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.memberuserid_, other->_impl_.memberuserid_);
  swap(_impl_.ModifyRole_, other->_impl_.ModifyRole_);
  swap(_impl_.ModifyPhoneNumber_, other->_impl_.ModifyPhoneNumber_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
  swap(_impl_._oneof_case_[1], other->_impl_._oneof_case_[1]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModifyMemberInfoReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_library_2eproto_getter, &descriptor_table_library_2eproto_once,
      file_level_metadata_library_2eproto[13]);
}

// ===================================================================

class ModifyMemberInfoRes::_Internal {
 public:
};

ModifyMemberInfoRes::ModifyMemberInfoRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CRYSTAL_NET.service.ModifyMemberInfoRes)
}
ModifyMemberInfoRes::ModifyMemberInfoRes(const ModifyMemberInfoRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ModifyMemberInfoRes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.errcode_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.errcode_ = from._impl_.errcode_;
  // @@protoc_insertion_point(copy_constructor:CRYSTAL_NET.service.ModifyMemberInfoRes)
}

inline void ModifyMemberInfoRes::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.errcode_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ModifyMemberInfoRes::~ModifyMemberInfoRes() {
  // @@protoc_insertion_point(destructor:CRYSTAL_NET.service.ModifyMemberInfoRes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModifyMemberInfoRes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ModifyMemberInfoRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ModifyMemberInfoRes::Clear() {
// @@protoc_insertion_point(message_clear_start:CRYSTAL_NET.service.ModifyMemberInfoRes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.errcode_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModifyMemberInfoRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 ErrCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.errcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModifyMemberInfoRes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CRYSTAL_NET.service.ModifyMemberInfoRes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 ErrCode = 1;
  if (this->_internal_errcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_errcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CRYSTAL_NET.service.ModifyMemberInfoRes)
  return target;
}

size_t ModifyMemberInfoRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CRYSTAL_NET.service.ModifyMemberInfoRes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 ErrCode = 1;
  if (this->_internal_errcode() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_errcode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModifyMemberInfoRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ModifyMemberInfoRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModifyMemberInfoRes::GetClassData() const { return &_class_data_; }


void ModifyMemberInfoRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ModifyMemberInfoRes*>(&to_msg);
  auto& from = static_cast<const ModifyMemberInfoRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CRYSTAL_NET.service.ModifyMemberInfoRes)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_errcode() != 0) {
    _this->_internal_set_errcode(from._internal_errcode());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModifyMemberInfoRes::CopyFrom(const ModifyMemberInfoRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CRYSTAL_NET.service.ModifyMemberInfoRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyMemberInfoRes::IsInitialized() const {
  return true;
}

void ModifyMemberInfoRes::InternalSwap(ModifyMemberInfoRes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.errcode_, other->_impl_.errcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModifyMemberInfoRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_library_2eproto_getter, &descriptor_table_library_2eproto_once,
      file_level_metadata_library_2eproto[14]);
}

// ===================================================================

class UserLibraryInfoNty::_Internal {
 public:
  static const ::CRYSTAL_NET::service::UserLibraryInfo& userlibraryinfo(const UserLibraryInfoNty* msg);
};

const ::CRYSTAL_NET::service::UserLibraryInfo&
UserLibraryInfoNty::_Internal::userlibraryinfo(const UserLibraryInfoNty* msg) {
  return *msg->_impl_.userlibraryinfo_;
}
void UserLibraryInfoNty::clear_userlibraryinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userlibraryinfo_ != nullptr) {
    delete _impl_.userlibraryinfo_;
  }
  _impl_.userlibraryinfo_ = nullptr;
}
UserLibraryInfoNty::UserLibraryInfoNty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CRYSTAL_NET.service.UserLibraryInfoNty)
}
UserLibraryInfoNty::UserLibraryInfoNty(const UserLibraryInfoNty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UserLibraryInfoNty* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.userlibraryinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_userlibraryinfo()) {
    _this->_impl_.userlibraryinfo_ = new ::CRYSTAL_NET::service::UserLibraryInfo(*from._impl_.userlibraryinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:CRYSTAL_NET.service.UserLibraryInfoNty)
}

inline void UserLibraryInfoNty::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.userlibraryinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UserLibraryInfoNty::~UserLibraryInfoNty() {
  // @@protoc_insertion_point(destructor:CRYSTAL_NET.service.UserLibraryInfoNty)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UserLibraryInfoNty::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.userlibraryinfo_;
}

void UserLibraryInfoNty::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UserLibraryInfoNty::Clear() {
// @@protoc_insertion_point(message_clear_start:CRYSTAL_NET.service.UserLibraryInfoNty)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.userlibraryinfo_ != nullptr) {
    delete _impl_.userlibraryinfo_;
  }
  _impl_.userlibraryinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UserLibraryInfoNty::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .CRYSTAL_NET.service.UserLibraryInfo UserLibraryInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_userlibraryinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UserLibraryInfoNty::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CRYSTAL_NET.service.UserLibraryInfoNty)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .CRYSTAL_NET.service.UserLibraryInfo UserLibraryInfo = 1;
  if (this->_internal_has_userlibraryinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::userlibraryinfo(this),
        _Internal::userlibraryinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CRYSTAL_NET.service.UserLibraryInfoNty)
  return target;
}

size_t UserLibraryInfoNty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CRYSTAL_NET.service.UserLibraryInfoNty)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .CRYSTAL_NET.service.UserLibraryInfo UserLibraryInfo = 1;
  if (this->_internal_has_userlibraryinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userlibraryinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UserLibraryInfoNty::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UserLibraryInfoNty::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UserLibraryInfoNty::GetClassData() const { return &_class_data_; }


void UserLibraryInfoNty::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UserLibraryInfoNty*>(&to_msg);
  auto& from = static_cast<const UserLibraryInfoNty&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CRYSTAL_NET.service.UserLibraryInfoNty)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_userlibraryinfo()) {
    _this->_internal_mutable_userlibraryinfo()->::CRYSTAL_NET::service::UserLibraryInfo::MergeFrom(
        from._internal_userlibraryinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UserLibraryInfoNty::CopyFrom(const UserLibraryInfoNty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CRYSTAL_NET.service.UserLibraryInfoNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserLibraryInfoNty::IsInitialized() const {
  return true;
}

void UserLibraryInfoNty::InternalSwap(UserLibraryInfoNty* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.userlibraryinfo_, other->_impl_.userlibraryinfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UserLibraryInfoNty::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_library_2eproto_getter, &descriptor_table_library_2eproto_once,
      file_level_metadata_library_2eproto[15]);
}

// ===================================================================

class GetLibraryMemberSimpleInfoReq::_Internal {
 public:
};

GetLibraryMemberSimpleInfoReq::GetLibraryMemberSimpleInfoReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CRYSTAL_NET.service.GetLibraryMemberSimpleInfoReq)
}
GetLibraryMemberSimpleInfoReq::GetLibraryMemberSimpleInfoReq(const GetLibraryMemberSimpleInfoReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetLibraryMemberSimpleInfoReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CRYSTAL_NET.service.GetLibraryMemberSimpleInfoReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLibraryMemberSimpleInfoReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLibraryMemberSimpleInfoReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetLibraryMemberSimpleInfoReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_library_2eproto_getter, &descriptor_table_library_2eproto_once,
      file_level_metadata_library_2eproto[16]);
}

// ===================================================================

class GetLibraryMemberSimpleInfoRes::_Internal {
 public:
};

void GetLibraryMemberSimpleInfoRes::clear_simpleuserinfolist() {
  _impl_.simpleuserinfolist_.Clear();
}
GetLibraryMemberSimpleInfoRes::GetLibraryMemberSimpleInfoRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CRYSTAL_NET.service.GetLibraryMemberSimpleInfoRes)
}
GetLibraryMemberSimpleInfoRes::GetLibraryMemberSimpleInfoRes(const GetLibraryMemberSimpleInfoRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetLibraryMemberSimpleInfoRes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.simpleuserinfolist_){from._impl_.simpleuserinfolist_}
    , decltype(_impl_.errcode_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.errcode_ = from._impl_.errcode_;
  // @@protoc_insertion_point(copy_constructor:CRYSTAL_NET.service.GetLibraryMemberSimpleInfoRes)
}

inline void GetLibraryMemberSimpleInfoRes::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.simpleuserinfolist_){arena}
    , decltype(_impl_.errcode_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetLibraryMemberSimpleInfoRes::~GetLibraryMemberSimpleInfoRes() {
  // @@protoc_insertion_point(destructor:CRYSTAL_NET.service.GetLibraryMemberSimpleInfoRes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetLibraryMemberSimpleInfoRes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.simpleuserinfolist_.~RepeatedPtrField();
}

void GetLibraryMemberSimpleInfoRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetLibraryMemberSimpleInfoRes::Clear() {
// @@protoc_insertion_point(message_clear_start:CRYSTAL_NET.service.GetLibraryMemberSimpleInfoRes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.simpleuserinfolist_.Clear();
  _impl_.errcode_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLibraryMemberSimpleInfoRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 ErrCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.errcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .CRYSTAL_NET.service.SimpleUserInfo SimpleUserInfoList = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_simpleuserinfolist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetLibraryMemberSimpleInfoRes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CRYSTAL_NET.service.GetLibraryMemberSimpleInfoRes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 ErrCode = 1;
  if (this->_internal_errcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_errcode(), target);
  }

  // repeated .CRYSTAL_NET.service.SimpleUserInfo SimpleUserInfoList = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_simpleuserinfolist_size()); i < n; i++) {
    const auto& repfield = this->_internal_simpleuserinfolist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CRYSTAL_NET.service.GetLibraryMemberSimpleInfoRes)
  return target;
}

size_t GetLibraryMemberSimpleInfoRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CRYSTAL_NET.service.GetLibraryMemberSimpleInfoRes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CRYSTAL_NET.service.SimpleUserInfo SimpleUserInfoList = 2;
  total_size += 1UL * this->_internal_simpleuserinfolist_size();
  for (const auto& msg : this->_impl_.simpleuserinfolist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // sint32 ErrCode = 1;
  if (this->_internal_errcode() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_errcode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLibraryMemberSimpleInfoRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetLibraryMemberSimpleInfoRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLibraryMemberSimpleInfoRes::GetClassData() const { return &_class_data_; }


void GetLibraryMemberSimpleInfoRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetLibraryMemberSimpleInfoRes*>(&to_msg);
  auto& from = static_cast<const GetLibraryMemberSimpleInfoRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CRYSTAL_NET.service.GetLibraryMemberSimpleInfoRes)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.simpleuserinfolist_.MergeFrom(from._impl_.simpleuserinfolist_);
  if (from._internal_errcode() != 0) {
    _this->_internal_set_errcode(from._internal_errcode());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetLibraryMemberSimpleInfoRes::CopyFrom(const GetLibraryMemberSimpleInfoRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CRYSTAL_NET.service.GetLibraryMemberSimpleInfoRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLibraryMemberSimpleInfoRes::IsInitialized() const {
  return true;
}

void GetLibraryMemberSimpleInfoRes::InternalSwap(GetLibraryMemberSimpleInfoRes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.simpleuserinfolist_.InternalSwap(&other->_impl_.simpleuserinfolist_);
  swap(_impl_.errcode_, other->_impl_.errcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLibraryMemberSimpleInfoRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_library_2eproto_getter, &descriptor_table_library_2eproto_once,
      file_level_metadata_library_2eproto[17]);
}

// ===================================================================

class AddLibraryBookReq::_Internal {
 public:
  static const ::CRYSTAL_NET::service::KeyWordsField& keywords(const AddLibraryBookReq* msg);
  static const ::CRYSTAL_NET::service::SnapshotField& snapshot(const AddLibraryBookReq* msg);
};

const ::CRYSTAL_NET::service::KeyWordsField&
AddLibraryBookReq::_Internal::keywords(const AddLibraryBookReq* msg) {
  return *msg->_impl_.KeyWordsOption_.keywords_;
}
const ::CRYSTAL_NET::service::SnapshotField&
AddLibraryBookReq::_Internal::snapshot(const AddLibraryBookReq* msg) {
  return *msg->_impl_.SnapshotOption_.snapshot_;
}
void AddLibraryBookReq::set_allocated_keywords(::CRYSTAL_NET::service::KeyWordsField* keywords) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_KeyWordsOption();
  if (keywords) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(keywords));
    if (message_arena != submessage_arena) {
      keywords = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, keywords, submessage_arena);
    }
    set_has_keywords();
    _impl_.KeyWordsOption_.keywords_ = keywords;
  }
  // @@protoc_insertion_point(field_set_allocated:CRYSTAL_NET.service.AddLibraryBookReq.KeyWords)
}
void AddLibraryBookReq::clear_keywords() {
  if (_internal_has_keywords()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.KeyWordsOption_.keywords_;
    }
    clear_has_KeyWordsOption();
  }
}
void AddLibraryBookReq::set_allocated_snapshot(::CRYSTAL_NET::service::SnapshotField* snapshot) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_SnapshotOption();
  if (snapshot) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(snapshot));
    if (message_arena != submessage_arena) {
      snapshot = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, snapshot, submessage_arena);
    }
    set_has_snapshot();
    _impl_.SnapshotOption_.snapshot_ = snapshot;
  }
  // @@protoc_insertion_point(field_set_allocated:CRYSTAL_NET.service.AddLibraryBookReq.Snapshot)
}
void AddLibraryBookReq::clear_snapshot() {
  if (_internal_has_snapshot()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.SnapshotOption_.snapshot_;
    }
    clear_has_SnapshotOption();
  }
}
AddLibraryBookReq::AddLibraryBookReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CRYSTAL_NET.service.AddLibraryBookReq)
}
AddLibraryBookReq::AddLibraryBookReq(const AddLibraryBookReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AddLibraryBookReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.bookname_){}
    , decltype(_impl_.isbncode_){}
    , decltype(_impl_.price_){}
    , decltype(_impl_.modifycount_){}
    , decltype(_impl_.BookCoverImageOption_){}
    , decltype(_impl_.KeyWordsOption_){}
    , decltype(_impl_.ContentOption_){}
    , decltype(_impl_.SnapshotOption_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.bookname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.bookname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_bookname().empty()) {
    _this->_impl_.bookname_.Set(from._internal_bookname(), 
      _this->GetArenaForAllocation());
  }
  _impl_.isbncode_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.isbncode_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_isbncode().empty()) {
    _this->_impl_.isbncode_.Set(from._internal_isbncode(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.price_, &from._impl_.price_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.modifycount_) -
    reinterpret_cast<char*>(&_impl_.price_)) + sizeof(_impl_.modifycount_));
  clear_has_BookCoverImageOption();
  switch (from.BookCoverImageOption_case()) {
    case kBookCoverImage: {
      _this->_internal_set_bookcoverimage(from._internal_bookcoverimage());
      break;
    }
    case BOOKCOVERIMAGEOPTION_NOT_SET: {
      break;
    }
  }
  clear_has_KeyWordsOption();
  switch (from.KeyWordsOption_case()) {
    case kKeyWords: {
      _this->_internal_mutable_keywords()->::CRYSTAL_NET::service::KeyWordsField::MergeFrom(
          from._internal_keywords());
      break;
    }
    case KEYWORDSOPTION_NOT_SET: {
      break;
    }
  }
  clear_has_ContentOption();
  switch (from.ContentOption_case()) {
    case kContent: {
      _this->_internal_set_content(from._internal_content());
      break;
    }
    case CONTENTOPTION_NOT_SET: {
      break;
    }
  }
  clear_has_SnapshotOption();
  switch (from.SnapshotOption_case()) {
    case kSnapshot: {
      _this->_internal_mutable_snapshot()->::CRYSTAL_NET::service::SnapshotField::MergeFrom(
          from._internal_snapshot());
      break;
    }
    case SNAPSHOTOPTION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:CRYSTAL_NET.service.AddLibraryBookReq)
}

inline void AddLibraryBookReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.bookname_){}
    , decltype(_impl_.isbncode_){}
    , decltype(_impl_.price_){int64_t{0}}
    , decltype(_impl_.modifycount_){int64_t{0}}
    , decltype(_impl_.BookCoverImageOption_){}
    , decltype(_impl_.KeyWordsOption_){}
    , decltype(_impl_.ContentOption_){}
    , decltype(_impl_.SnapshotOption_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  _impl_.bookname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.bookname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.isbncode_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.isbncode_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  clear_has_BookCoverImageOption();
  clear_has_KeyWordsOption();
  clear_has_ContentOption();
  clear_has_SnapshotOption();
}

AddLibraryBookReq::~AddLibraryBookReq() {
  // @@protoc_insertion_point(destructor:CRYSTAL_NET.service.AddLibraryBookReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AddLibraryBookReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.bookname_.Destroy();
  _impl_.isbncode_.Destroy();
  if (has_BookCoverImageOption()) {
    clear_BookCoverImageOption();
  }
  if (has_KeyWordsOption()) {
    clear_KeyWordsOption();
  }
  if (has_ContentOption()) {
    clear_ContentOption();
  }
  if (has_SnapshotOption()) {
    clear_SnapshotOption();
  }
}

void AddLibraryBookReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AddLibraryBookReq::clear_BookCoverImageOption() {
// @@protoc_insertion_point(one_of_clear_start:CRYSTAL_NET.service.AddLibraryBookReq)
  switch (BookCoverImageOption_case()) {
    case kBookCoverImage: {
      _impl_.BookCoverImageOption_.bookcoverimage_.Destroy();
      break;
    }
    case BOOKCOVERIMAGEOPTION_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = BOOKCOVERIMAGEOPTION_NOT_SET;
}

void AddLibraryBookReq::clear_KeyWordsOption() {
// @@protoc_insertion_point(one_of_clear_start:CRYSTAL_NET.service.AddLibraryBookReq)
  switch (KeyWordsOption_case()) {
    case kKeyWords: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.KeyWordsOption_.keywords_;
      }
      break;
    }
    case KEYWORDSOPTION_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[1] = KEYWORDSOPTION_NOT_SET;
}

void AddLibraryBookReq::clear_ContentOption() {
// @@protoc_insertion_point(one_of_clear_start:CRYSTAL_NET.service.AddLibraryBookReq)
  switch (ContentOption_case()) {
    case kContent: {
      _impl_.ContentOption_.content_.Destroy();
      break;
    }
    case CONTENTOPTION_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[2] = CONTENTOPTION_NOT_SET;
}

void AddLibraryBookReq::clear_SnapshotOption() {
// @@protoc_insertion_point(one_of_clear_start:CRYSTAL_NET.service.AddLibraryBookReq)
  switch (SnapshotOption_case()) {
    case kSnapshot: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.SnapshotOption_.snapshot_;
      }
      break;
    }
    case SNAPSHOTOPTION_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[3] = SNAPSHOTOPTION_NOT_SET;
}


void AddLibraryBookReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CRYSTAL_NET.service.AddLibraryBookReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bookname_.ClearToEmpty();
  _impl_.isbncode_.ClearToEmpty();
  ::memset(&_impl_.price_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.modifycount_) -
      reinterpret_cast<char*>(&_impl_.price_)) + sizeof(_impl_.modifycount_));
  clear_BookCoverImageOption();
  clear_KeyWordsOption();
  clear_ContentOption();
  clear_SnapshotOption();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddLibraryBookReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string BookName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_bookname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "CRYSTAL_NET.service.AddLibraryBookReq.BookName"));
        } else
          goto handle_unusual;
        continue;
      // string IsbnCode = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_isbncode();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "CRYSTAL_NET.service.AddLibraryBookReq.IsbnCode"));
        } else
          goto handle_unusual;
        continue;
      // string BookCoverImage = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_bookcoverimage();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "CRYSTAL_NET.service.AddLibraryBookReq.BookCoverImage"));
        } else
          goto handle_unusual;
        continue;
      // sint64 Price = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.price_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint64 ModifyCount = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.modifycount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .CRYSTAL_NET.service.KeyWordsField KeyWords = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_keywords(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Content = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_content();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "CRYSTAL_NET.service.AddLibraryBookReq.Content"));
        } else
          goto handle_unusual;
        continue;
      // .CRYSTAL_NET.service.SnapshotField Snapshot = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_snapshot(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AddLibraryBookReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CRYSTAL_NET.service.AddLibraryBookReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string BookName = 1;
  if (!this->_internal_bookname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bookname().data(), static_cast<int>(this->_internal_bookname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "CRYSTAL_NET.service.AddLibraryBookReq.BookName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_bookname(), target);
  }

  // string IsbnCode = 2;
  if (!this->_internal_isbncode().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_isbncode().data(), static_cast<int>(this->_internal_isbncode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "CRYSTAL_NET.service.AddLibraryBookReq.IsbnCode");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_isbncode(), target);
  }

  // string BookCoverImage = 3;
  if (_internal_has_bookcoverimage()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bookcoverimage().data(), static_cast<int>(this->_internal_bookcoverimage().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "CRYSTAL_NET.service.AddLibraryBookReq.BookCoverImage");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_bookcoverimage(), target);
  }

  // sint64 Price = 4;
  if (this->_internal_price() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt64ToArray(4, this->_internal_price(), target);
  }

  // sint64 ModifyCount = 5;
  if (this->_internal_modifycount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt64ToArray(5, this->_internal_modifycount(), target);
  }

  // .CRYSTAL_NET.service.KeyWordsField KeyWords = 6;
  if (_internal_has_keywords()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::keywords(this),
        _Internal::keywords(this).GetCachedSize(), target, stream);
  }

  // string Content = 7;
  if (_internal_has_content()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_content().data(), static_cast<int>(this->_internal_content().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "CRYSTAL_NET.service.AddLibraryBookReq.Content");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_content(), target);
  }

  // .CRYSTAL_NET.service.SnapshotField Snapshot = 8;
  if (_internal_has_snapshot()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::snapshot(this),
        _Internal::snapshot(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CRYSTAL_NET.service.AddLibraryBookReq)
  return target;
}

size_t AddLibraryBookReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CRYSTAL_NET.service.AddLibraryBookReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string BookName = 1;
  if (!this->_internal_bookname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_bookname());
  }

  // string IsbnCode = 2;
  if (!this->_internal_isbncode().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_isbncode());
  }

  // sint64 Price = 4;
  if (this->_internal_price() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt64SizePlusOne(this->_internal_price());
  }

  // sint64 ModifyCount = 5;
  if (this->_internal_modifycount() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt64SizePlusOne(this->_internal_modifycount());
  }

  switch (BookCoverImageOption_case()) {
    // string BookCoverImage = 3;
    case kBookCoverImage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_bookcoverimage());
      break;
    }
    case BOOKCOVERIMAGEOPTION_NOT_SET: {
      break;
    }
  }
  switch (KeyWordsOption_case()) {
    // .CRYSTAL_NET.service.KeyWordsField KeyWords = 6;
    case kKeyWords: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.KeyWordsOption_.keywords_);
      break;
    }
    case KEYWORDSOPTION_NOT_SET: {
      break;
    }
  }
  switch (ContentOption_case()) {
    // string Content = 7;
    case kContent: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_content());
      break;
    }
    case CONTENTOPTION_NOT_SET: {
      break;
    }
  }
  switch (SnapshotOption_case()) {
    // .CRYSTAL_NET.service.SnapshotField Snapshot = 8;
    case kSnapshot: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.SnapshotOption_.snapshot_);
      break;
    }
    case SNAPSHOTOPTION_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddLibraryBookReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AddLibraryBookReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddLibraryBookReq::GetClassData() const { return &_class_data_; }


void AddLibraryBookReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AddLibraryBookReq*>(&to_msg);
  auto& from = static_cast<const AddLibraryBookReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CRYSTAL_NET.service.AddLibraryBookReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_bookname().empty()) {
    _this->_internal_set_bookname(from._internal_bookname());
  }
  if (!from._internal_isbncode().empty()) {
    _this->_internal_set_isbncode(from._internal_isbncode());
  }
  if (from._internal_price() != 0) {
    _this->_internal_set_price(from._internal_price());
  }
  if (from._internal_modifycount() != 0) {
    _this->_internal_set_modifycount(from._internal_modifycount());
  }
  switch (from.BookCoverImageOption_case()) {
    case kBookCoverImage: {
      _this->_internal_set_bookcoverimage(from._internal_bookcoverimage());
      break;
    }
    case BOOKCOVERIMAGEOPTION_NOT_SET: {
      break;
    }
  }
  switch (from.KeyWordsOption_case()) {
    case kKeyWords: {
      _this->_internal_mutable_keywords()->::CRYSTAL_NET::service::KeyWordsField::MergeFrom(
          from._internal_keywords());
      break;
    }
    case KEYWORDSOPTION_NOT_SET: {
      break;
    }
  }
  switch (from.ContentOption_case()) {
    case kContent: {
      _this->_internal_set_content(from._internal_content());
      break;
    }
    case CONTENTOPTION_NOT_SET: {
      break;
    }
  }
  switch (from.SnapshotOption_case()) {
    case kSnapshot: {
      _this->_internal_mutable_snapshot()->::CRYSTAL_NET::service::SnapshotField::MergeFrom(
          from._internal_snapshot());
      break;
    }
    case SNAPSHOTOPTION_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddLibraryBookReq::CopyFrom(const AddLibraryBookReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CRYSTAL_NET.service.AddLibraryBookReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddLibraryBookReq::IsInitialized() const {
  return true;
}

void AddLibraryBookReq::InternalSwap(AddLibraryBookReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.bookname_, lhs_arena,
      &other->_impl_.bookname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.isbncode_, lhs_arena,
      &other->_impl_.isbncode_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AddLibraryBookReq, _impl_.modifycount_)
      + sizeof(AddLibraryBookReq::_impl_.modifycount_)
      - PROTOBUF_FIELD_OFFSET(AddLibraryBookReq, _impl_.price_)>(
          reinterpret_cast<char*>(&_impl_.price_),
          reinterpret_cast<char*>(&other->_impl_.price_));
  swap(_impl_.BookCoverImageOption_, other->_impl_.BookCoverImageOption_);
  swap(_impl_.KeyWordsOption_, other->_impl_.KeyWordsOption_);
  swap(_impl_.ContentOption_, other->_impl_.ContentOption_);
  swap(_impl_.SnapshotOption_, other->_impl_.SnapshotOption_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
  swap(_impl_._oneof_case_[1], other->_impl_._oneof_case_[1]);
  swap(_impl_._oneof_case_[2], other->_impl_._oneof_case_[2]);
  swap(_impl_._oneof_case_[3], other->_impl_._oneof_case_[3]);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddLibraryBookReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_library_2eproto_getter, &descriptor_table_library_2eproto_once,
      file_level_metadata_library_2eproto[18]);
}

// ===================================================================

class AddLibraryBookRes::_Internal {
 public:
};

AddLibraryBookRes::AddLibraryBookRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CRYSTAL_NET.service.AddLibraryBookRes)
}
AddLibraryBookRes::AddLibraryBookRes(const AddLibraryBookRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AddLibraryBookRes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.errcode_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.errcode_ = from._impl_.errcode_;
  // @@protoc_insertion_point(copy_constructor:CRYSTAL_NET.service.AddLibraryBookRes)
}

inline void AddLibraryBookRes::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.errcode_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AddLibraryBookRes::~AddLibraryBookRes() {
  // @@protoc_insertion_point(destructor:CRYSTAL_NET.service.AddLibraryBookRes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AddLibraryBookRes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void AddLibraryBookRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AddLibraryBookRes::Clear() {
// @@protoc_insertion_point(message_clear_start:CRYSTAL_NET.service.AddLibraryBookRes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.errcode_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddLibraryBookRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 ErrCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.errcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AddLibraryBookRes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CRYSTAL_NET.service.AddLibraryBookRes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 ErrCode = 1;
  if (this->_internal_errcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_errcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CRYSTAL_NET.service.AddLibraryBookRes)
  return target;
}

size_t AddLibraryBookRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CRYSTAL_NET.service.AddLibraryBookRes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 ErrCode = 1;
  if (this->_internal_errcode() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_errcode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddLibraryBookRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AddLibraryBookRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddLibraryBookRes::GetClassData() const { return &_class_data_; }


void AddLibraryBookRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AddLibraryBookRes*>(&to_msg);
  auto& from = static_cast<const AddLibraryBookRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CRYSTAL_NET.service.AddLibraryBookRes)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_errcode() != 0) {
    _this->_internal_set_errcode(from._internal_errcode());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddLibraryBookRes::CopyFrom(const AddLibraryBookRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CRYSTAL_NET.service.AddLibraryBookRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddLibraryBookRes::IsInitialized() const {
  return true;
}

void AddLibraryBookRes::InternalSwap(AddLibraryBookRes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.errcode_, other->_impl_.errcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddLibraryBookRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_library_2eproto_getter, &descriptor_table_library_2eproto_once,
      file_level_metadata_library_2eproto[19]);
}

// ===================================================================

class AddLibraryBookCountReq::_Internal {
 public:
};

AddLibraryBookCountReq::AddLibraryBookCountReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CRYSTAL_NET.service.AddLibraryBookCountReq)
}
AddLibraryBookCountReq::AddLibraryBookCountReq(const AddLibraryBookCountReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AddLibraryBookCountReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.bookid_){}
    , decltype(_impl_.modifycount_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.bookid_, &from._impl_.bookid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.modifycount_) -
    reinterpret_cast<char*>(&_impl_.bookid_)) + sizeof(_impl_.modifycount_));
  // @@protoc_insertion_point(copy_constructor:CRYSTAL_NET.service.AddLibraryBookCountReq)
}

inline void AddLibraryBookCountReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.bookid_){uint64_t{0u}}
    , decltype(_impl_.modifycount_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AddLibraryBookCountReq::~AddLibraryBookCountReq() {
  // @@protoc_insertion_point(destructor:CRYSTAL_NET.service.AddLibraryBookCountReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AddLibraryBookCountReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void AddLibraryBookCountReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AddLibraryBookCountReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CRYSTAL_NET.service.AddLibraryBookCountReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.bookid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.modifycount_) -
      reinterpret_cast<char*>(&_impl_.bookid_)) + sizeof(_impl_.modifycount_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddLibraryBookCountReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 BookId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.bookid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint64 ModifyCount = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.modifycount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AddLibraryBookCountReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CRYSTAL_NET.service.AddLibraryBookCountReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 BookId = 1;
  if (this->_internal_bookid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_bookid(), target);
  }

  // sint64 ModifyCount = 2;
  if (this->_internal_modifycount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt64ToArray(2, this->_internal_modifycount(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CRYSTAL_NET.service.AddLibraryBookCountReq)
  return target;
}

size_t AddLibraryBookCountReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CRYSTAL_NET.service.AddLibraryBookCountReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 BookId = 1;
  if (this->_internal_bookid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_bookid());
  }

  // sint64 ModifyCount = 2;
  if (this->_internal_modifycount() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt64SizePlusOne(this->_internal_modifycount());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddLibraryBookCountReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AddLibraryBookCountReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddLibraryBookCountReq::GetClassData() const { return &_class_data_; }


void AddLibraryBookCountReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AddLibraryBookCountReq*>(&to_msg);
  auto& from = static_cast<const AddLibraryBookCountReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CRYSTAL_NET.service.AddLibraryBookCountReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_bookid() != 0) {
    _this->_internal_set_bookid(from._internal_bookid());
  }
  if (from._internal_modifycount() != 0) {
    _this->_internal_set_modifycount(from._internal_modifycount());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddLibraryBookCountReq::CopyFrom(const AddLibraryBookCountReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CRYSTAL_NET.service.AddLibraryBookCountReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddLibraryBookCountReq::IsInitialized() const {
  return true;
}

void AddLibraryBookCountReq::InternalSwap(AddLibraryBookCountReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AddLibraryBookCountReq, _impl_.modifycount_)
      + sizeof(AddLibraryBookCountReq::_impl_.modifycount_)
      - PROTOBUF_FIELD_OFFSET(AddLibraryBookCountReq, _impl_.bookid_)>(
          reinterpret_cast<char*>(&_impl_.bookid_),
          reinterpret_cast<char*>(&other->_impl_.bookid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AddLibraryBookCountReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_library_2eproto_getter, &descriptor_table_library_2eproto_once,
      file_level_metadata_library_2eproto[20]);
}

// ===================================================================

class AddLibraryBookCountRes::_Internal {
 public:
};

AddLibraryBookCountRes::AddLibraryBookCountRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CRYSTAL_NET.service.AddLibraryBookCountRes)
}
AddLibraryBookCountRes::AddLibraryBookCountRes(const AddLibraryBookCountRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AddLibraryBookCountRes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.errcode_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.errcode_ = from._impl_.errcode_;
  // @@protoc_insertion_point(copy_constructor:CRYSTAL_NET.service.AddLibraryBookCountRes)
}

inline void AddLibraryBookCountRes::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.errcode_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AddLibraryBookCountRes::~AddLibraryBookCountRes() {
  // @@protoc_insertion_point(destructor:CRYSTAL_NET.service.AddLibraryBookCountRes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AddLibraryBookCountRes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void AddLibraryBookCountRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AddLibraryBookCountRes::Clear() {
// @@protoc_insertion_point(message_clear_start:CRYSTAL_NET.service.AddLibraryBookCountRes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.errcode_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddLibraryBookCountRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 ErrCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.errcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AddLibraryBookCountRes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CRYSTAL_NET.service.AddLibraryBookCountRes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 ErrCode = 1;
  if (this->_internal_errcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_errcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CRYSTAL_NET.service.AddLibraryBookCountRes)
  return target;
}

size_t AddLibraryBookCountRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CRYSTAL_NET.service.AddLibraryBookCountRes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 ErrCode = 1;
  if (this->_internal_errcode() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_errcode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddLibraryBookCountRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AddLibraryBookCountRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddLibraryBookCountRes::GetClassData() const { return &_class_data_; }


void AddLibraryBookCountRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AddLibraryBookCountRes*>(&to_msg);
  auto& from = static_cast<const AddLibraryBookCountRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CRYSTAL_NET.service.AddLibraryBookCountRes)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_errcode() != 0) {
    _this->_internal_set_errcode(from._internal_errcode());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddLibraryBookCountRes::CopyFrom(const AddLibraryBookCountRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CRYSTAL_NET.service.AddLibraryBookCountRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddLibraryBookCountRes::IsInitialized() const {
  return true;
}

void AddLibraryBookCountRes::InternalSwap(AddLibraryBookCountRes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.errcode_, other->_impl_.errcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddLibraryBookCountRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_library_2eproto_getter, &descriptor_table_library_2eproto_once,
      file_level_metadata_library_2eproto[21]);
}

// ===================================================================

class GetBookListReq::_Internal {
 public:
};

GetBookListReq::GetBookListReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CRYSTAL_NET.service.GetBookListReq)
}
GetBookListReq::GetBookListReq(const GetBookListReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetBookListReq* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CRYSTAL_NET.service.GetBookListReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBookListReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBookListReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetBookListReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_library_2eproto_getter, &descriptor_table_library_2eproto_once,
      file_level_metadata_library_2eproto[22]);
}

// ===================================================================

class BookListNty::_Internal {
 public:
};

void BookListNty::clear_bookinfolist() {
  _impl_.bookinfolist_.Clear();
}
BookListNty::BookListNty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CRYSTAL_NET.service.BookListNty)
}
BookListNty::BookListNty(const BookListNty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BookListNty* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.bookinfolist_){from._impl_.bookinfolist_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CRYSTAL_NET.service.BookListNty)
}

inline void BookListNty::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.bookinfolist_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

BookListNty::~BookListNty() {
  // @@protoc_insertion_point(destructor:CRYSTAL_NET.service.BookListNty)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BookListNty::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.bookinfolist_.~RepeatedPtrField();
}

void BookListNty::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BookListNty::Clear() {
// @@protoc_insertion_point(message_clear_start:CRYSTAL_NET.service.BookListNty)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bookinfolist_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BookListNty::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .CRYSTAL_NET.service.BookInfo BookInfoList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_bookinfolist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BookListNty::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CRYSTAL_NET.service.BookListNty)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CRYSTAL_NET.service.BookInfo BookInfoList = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_bookinfolist_size()); i < n; i++) {
    const auto& repfield = this->_internal_bookinfolist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CRYSTAL_NET.service.BookListNty)
  return target;
}

size_t BookListNty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CRYSTAL_NET.service.BookListNty)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CRYSTAL_NET.service.BookInfo BookInfoList = 1;
  total_size += 1UL * this->_internal_bookinfolist_size();
  for (const auto& msg : this->_impl_.bookinfolist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BookListNty::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BookListNty::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BookListNty::GetClassData() const { return &_class_data_; }


void BookListNty::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BookListNty*>(&to_msg);
  auto& from = static_cast<const BookListNty&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CRYSTAL_NET.service.BookListNty)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.bookinfolist_.MergeFrom(from._impl_.bookinfolist_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BookListNty::CopyFrom(const BookListNty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CRYSTAL_NET.service.BookListNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BookListNty::IsInitialized() const {
  return true;
}

void BookListNty::InternalSwap(BookListNty* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.bookinfolist_.InternalSwap(&other->_impl_.bookinfolist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BookListNty::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_library_2eproto_getter, &descriptor_table_library_2eproto_once,
      file_level_metadata_library_2eproto[23]);
}

// ===================================================================

class BooksChangeNty::_Internal {
 public:
};

void BooksChangeNty::clear_bookinfolist() {
  _impl_.bookinfolist_.Clear();
}
BooksChangeNty::BooksChangeNty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CRYSTAL_NET.service.BooksChangeNty)
}
BooksChangeNty::BooksChangeNty(const BooksChangeNty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BooksChangeNty* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.bookinfolist_){from._impl_.bookinfolist_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CRYSTAL_NET.service.BooksChangeNty)
}

inline void BooksChangeNty::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.bookinfolist_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

BooksChangeNty::~BooksChangeNty() {
  // @@protoc_insertion_point(destructor:CRYSTAL_NET.service.BooksChangeNty)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BooksChangeNty::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.bookinfolist_.~RepeatedPtrField();
}

void BooksChangeNty::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BooksChangeNty::Clear() {
// @@protoc_insertion_point(message_clear_start:CRYSTAL_NET.service.BooksChangeNty)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bookinfolist_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BooksChangeNty::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .CRYSTAL_NET.service.BookInfo BookInfoList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_bookinfolist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BooksChangeNty::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CRYSTAL_NET.service.BooksChangeNty)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CRYSTAL_NET.service.BookInfo BookInfoList = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_bookinfolist_size()); i < n; i++) {
    const auto& repfield = this->_internal_bookinfolist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CRYSTAL_NET.service.BooksChangeNty)
  return target;
}

size_t BooksChangeNty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CRYSTAL_NET.service.BooksChangeNty)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CRYSTAL_NET.service.BookInfo BookInfoList = 1;
  total_size += 1UL * this->_internal_bookinfolist_size();
  for (const auto& msg : this->_impl_.bookinfolist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BooksChangeNty::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BooksChangeNty::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BooksChangeNty::GetClassData() const { return &_class_data_; }


void BooksChangeNty::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BooksChangeNty*>(&to_msg);
  auto& from = static_cast<const BooksChangeNty&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CRYSTAL_NET.service.BooksChangeNty)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.bookinfolist_.MergeFrom(from._impl_.bookinfolist_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BooksChangeNty::CopyFrom(const BooksChangeNty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CRYSTAL_NET.service.BooksChangeNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BooksChangeNty::IsInitialized() const {
  return true;
}

void BooksChangeNty::InternalSwap(BooksChangeNty* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.bookinfolist_.InternalSwap(&other->_impl_.bookinfolist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BooksChangeNty::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_library_2eproto_getter, &descriptor_table_library_2eproto_once,
      file_level_metadata_library_2eproto[24]);
}

// ===================================================================

class BookVariantInfoItemsNty::_Internal {
 public:
};

void BookVariantInfoItemsNty::clear_bookvariantinfoitemlist() {
  _impl_.bookvariantinfoitemlist_.Clear();
}
BookVariantInfoItemsNty::BookVariantInfoItemsNty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CRYSTAL_NET.service.BookVariantInfoItemsNty)
}
BookVariantInfoItemsNty::BookVariantInfoItemsNty(const BookVariantInfoItemsNty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BookVariantInfoItemsNty* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.bookvariantinfoitemlist_){from._impl_.bookvariantinfoitemlist_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CRYSTAL_NET.service.BookVariantInfoItemsNty)
}

inline void BookVariantInfoItemsNty::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.bookvariantinfoitemlist_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

BookVariantInfoItemsNty::~BookVariantInfoItemsNty() {
  // @@protoc_insertion_point(destructor:CRYSTAL_NET.service.BookVariantInfoItemsNty)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BookVariantInfoItemsNty::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.bookvariantinfoitemlist_.~RepeatedPtrField();
}

void BookVariantInfoItemsNty::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BookVariantInfoItemsNty::Clear() {
// @@protoc_insertion_point(message_clear_start:CRYSTAL_NET.service.BookVariantInfoItemsNty)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bookvariantinfoitemlist_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BookVariantInfoItemsNty::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .CRYSTAL_NET.service.BookVariantInfoItem BookVariantInfoItemList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_bookvariantinfoitemlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BookVariantInfoItemsNty::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CRYSTAL_NET.service.BookVariantInfoItemsNty)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CRYSTAL_NET.service.BookVariantInfoItem BookVariantInfoItemList = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_bookvariantinfoitemlist_size()); i < n; i++) {
    const auto& repfield = this->_internal_bookvariantinfoitemlist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CRYSTAL_NET.service.BookVariantInfoItemsNty)
  return target;
}

size_t BookVariantInfoItemsNty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CRYSTAL_NET.service.BookVariantInfoItemsNty)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CRYSTAL_NET.service.BookVariantInfoItem BookVariantInfoItemList = 1;
  total_size += 1UL * this->_internal_bookvariantinfoitemlist_size();
  for (const auto& msg : this->_impl_.bookvariantinfoitemlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BookVariantInfoItemsNty::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BookVariantInfoItemsNty::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BookVariantInfoItemsNty::GetClassData() const { return &_class_data_; }


void BookVariantInfoItemsNty::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BookVariantInfoItemsNty*>(&to_msg);
  auto& from = static_cast<const BookVariantInfoItemsNty&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CRYSTAL_NET.service.BookVariantInfoItemsNty)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.bookvariantinfoitemlist_.MergeFrom(from._impl_.bookvariantinfoitemlist_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BookVariantInfoItemsNty::CopyFrom(const BookVariantInfoItemsNty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CRYSTAL_NET.service.BookVariantInfoItemsNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BookVariantInfoItemsNty::IsInitialized() const {
  return true;
}

void BookVariantInfoItemsNty::InternalSwap(BookVariantInfoItemsNty* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.bookvariantinfoitemlist_.InternalSwap(&other->_impl_.bookvariantinfoitemlist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BookVariantInfoItemsNty::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_library_2eproto_getter, &descriptor_table_library_2eproto_once,
      file_level_metadata_library_2eproto[25]);
}

// ===================================================================

class GetBookListRes::_Internal {
 public:
};

GetBookListRes::GetBookListRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CRYSTAL_NET.service.GetBookListRes)
}
GetBookListRes::GetBookListRes(const GetBookListRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetBookListRes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.errcode_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.errcode_ = from._impl_.errcode_;
  // @@protoc_insertion_point(copy_constructor:CRYSTAL_NET.service.GetBookListRes)
}

inline void GetBookListRes::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.errcode_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetBookListRes::~GetBookListRes() {
  // @@protoc_insertion_point(destructor:CRYSTAL_NET.service.GetBookListRes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetBookListRes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetBookListRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetBookListRes::Clear() {
// @@protoc_insertion_point(message_clear_start:CRYSTAL_NET.service.GetBookListRes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.errcode_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBookListRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 ErrCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.errcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBookListRes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CRYSTAL_NET.service.GetBookListRes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 ErrCode = 1;
  if (this->_internal_errcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_errcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CRYSTAL_NET.service.GetBookListRes)
  return target;
}

size_t GetBookListRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CRYSTAL_NET.service.GetBookListRes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 ErrCode = 1;
  if (this->_internal_errcode() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_errcode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBookListRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetBookListRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBookListRes::GetClassData() const { return &_class_data_; }


void GetBookListRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetBookListRes*>(&to_msg);
  auto& from = static_cast<const GetBookListRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CRYSTAL_NET.service.GetBookListRes)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_errcode() != 0) {
    _this->_internal_set_errcode(from._internal_errcode());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBookListRes::CopyFrom(const GetBookListRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CRYSTAL_NET.service.GetBookListRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBookListRes::IsInitialized() const {
  return true;
}

void GetBookListRes::InternalSwap(GetBookListRes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.errcode_, other->_impl_.errcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBookListRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_library_2eproto_getter, &descriptor_table_library_2eproto_once,
      file_level_metadata_library_2eproto[26]);
}

// ===================================================================

class GetBookInfoReq::_Internal {
 public:
};

GetBookInfoReq::GetBookInfoReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CRYSTAL_NET.service.GetBookInfoReq)
}
GetBookInfoReq::GetBookInfoReq(const GetBookInfoReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetBookInfoReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.isbncode_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.isbncode_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.isbncode_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_isbncode().empty()) {
    _this->_impl_.isbncode_.Set(from._internal_isbncode(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:CRYSTAL_NET.service.GetBookInfoReq)
}

inline void GetBookInfoReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.isbncode_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.isbncode_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.isbncode_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetBookInfoReq::~GetBookInfoReq() {
  // @@protoc_insertion_point(destructor:CRYSTAL_NET.service.GetBookInfoReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetBookInfoReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.isbncode_.Destroy();
}

void GetBookInfoReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetBookInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CRYSTAL_NET.service.GetBookInfoReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.isbncode_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBookInfoReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string IsbnCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_isbncode();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "CRYSTAL_NET.service.GetBookInfoReq.IsbnCode"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBookInfoReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CRYSTAL_NET.service.GetBookInfoReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string IsbnCode = 1;
  if (!this->_internal_isbncode().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_isbncode().data(), static_cast<int>(this->_internal_isbncode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "CRYSTAL_NET.service.GetBookInfoReq.IsbnCode");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_isbncode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CRYSTAL_NET.service.GetBookInfoReq)
  return target;
}

size_t GetBookInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CRYSTAL_NET.service.GetBookInfoReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string IsbnCode = 1;
  if (!this->_internal_isbncode().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_isbncode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBookInfoReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetBookInfoReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBookInfoReq::GetClassData() const { return &_class_data_; }


void GetBookInfoReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetBookInfoReq*>(&to_msg);
  auto& from = static_cast<const GetBookInfoReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CRYSTAL_NET.service.GetBookInfoReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_isbncode().empty()) {
    _this->_internal_set_isbncode(from._internal_isbncode());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBookInfoReq::CopyFrom(const GetBookInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CRYSTAL_NET.service.GetBookInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBookInfoReq::IsInitialized() const {
  return true;
}

void GetBookInfoReq::InternalSwap(GetBookInfoReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.isbncode_, lhs_arena,
      &other->_impl_.isbncode_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBookInfoReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_library_2eproto_getter, &descriptor_table_library_2eproto_once,
      file_level_metadata_library_2eproto[27]);
}

// ===================================================================

class GetBookInfoRes::_Internal {
 public:
  static const ::CRYSTAL_NET::service::BookInfo& bookinfo(const GetBookInfoRes* msg);
};

const ::CRYSTAL_NET::service::BookInfo&
GetBookInfoRes::_Internal::bookinfo(const GetBookInfoRes* msg) {
  return *msg->_impl_.bookinfo_;
}
void GetBookInfoRes::clear_bookinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.bookinfo_ != nullptr) {
    delete _impl_.bookinfo_;
  }
  _impl_.bookinfo_ = nullptr;
}
GetBookInfoRes::GetBookInfoRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CRYSTAL_NET.service.GetBookInfoRes)
}
GetBookInfoRes::GetBookInfoRes(const GetBookInfoRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetBookInfoRes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.bookinfo_){nullptr}
    , decltype(_impl_.errcode_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_bookinfo()) {
    _this->_impl_.bookinfo_ = new ::CRYSTAL_NET::service::BookInfo(*from._impl_.bookinfo_);
  }
  _this->_impl_.errcode_ = from._impl_.errcode_;
  // @@protoc_insertion_point(copy_constructor:CRYSTAL_NET.service.GetBookInfoRes)
}

inline void GetBookInfoRes::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.bookinfo_){nullptr}
    , decltype(_impl_.errcode_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetBookInfoRes::~GetBookInfoRes() {
  // @@protoc_insertion_point(destructor:CRYSTAL_NET.service.GetBookInfoRes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetBookInfoRes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.bookinfo_;
}

void GetBookInfoRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetBookInfoRes::Clear() {
// @@protoc_insertion_point(message_clear_start:CRYSTAL_NET.service.GetBookInfoRes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.bookinfo_ != nullptr) {
    delete _impl_.bookinfo_;
  }
  _impl_.bookinfo_ = nullptr;
  _impl_.errcode_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBookInfoRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 ErrCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.errcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .CRYSTAL_NET.service.BookInfo BookInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_bookinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBookInfoRes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CRYSTAL_NET.service.GetBookInfoRes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 ErrCode = 1;
  if (this->_internal_errcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_errcode(), target);
  }

  // .CRYSTAL_NET.service.BookInfo BookInfo = 2;
  if (this->_internal_has_bookinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::bookinfo(this),
        _Internal::bookinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CRYSTAL_NET.service.GetBookInfoRes)
  return target;
}

size_t GetBookInfoRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CRYSTAL_NET.service.GetBookInfoRes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .CRYSTAL_NET.service.BookInfo BookInfo = 2;
  if (this->_internal_has_bookinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.bookinfo_);
  }

  // sint32 ErrCode = 1;
  if (this->_internal_errcode() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_errcode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBookInfoRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetBookInfoRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBookInfoRes::GetClassData() const { return &_class_data_; }


void GetBookInfoRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetBookInfoRes*>(&to_msg);
  auto& from = static_cast<const GetBookInfoRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CRYSTAL_NET.service.GetBookInfoRes)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_bookinfo()) {
    _this->_internal_mutable_bookinfo()->::CRYSTAL_NET::service::BookInfo::MergeFrom(
        from._internal_bookinfo());
  }
  if (from._internal_errcode() != 0) {
    _this->_internal_set_errcode(from._internal_errcode());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBookInfoRes::CopyFrom(const GetBookInfoRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CRYSTAL_NET.service.GetBookInfoRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBookInfoRes::IsInitialized() const {
  return true;
}

void GetBookInfoRes::InternalSwap(GetBookInfoRes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetBookInfoRes, _impl_.errcode_)
      + sizeof(GetBookInfoRes::_impl_.errcode_)
      - PROTOBUF_FIELD_OFFSET(GetBookInfoRes, _impl_.bookinfo_)>(
          reinterpret_cast<char*>(&_impl_.bookinfo_),
          reinterpret_cast<char*>(&other->_impl_.bookinfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBookInfoRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_library_2eproto_getter, &descriptor_table_library_2eproto_once,
      file_level_metadata_library_2eproto[28]);
}

// ===================================================================

class GetBookByBookNameReq::_Internal {
 public:
};

GetBookByBookNameReq::GetBookByBookNameReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CRYSTAL_NET.service.GetBookByBookNameReq)
}
GetBookByBookNameReq::GetBookByBookNameReq(const GetBookByBookNameReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetBookByBookNameReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.bookname_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.bookname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.bookname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_bookname().empty()) {
    _this->_impl_.bookname_.Set(from._internal_bookname(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:CRYSTAL_NET.service.GetBookByBookNameReq)
}

inline void GetBookByBookNameReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.bookname_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.bookname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.bookname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetBookByBookNameReq::~GetBookByBookNameReq() {
  // @@protoc_insertion_point(destructor:CRYSTAL_NET.service.GetBookByBookNameReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetBookByBookNameReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.bookname_.Destroy();
}

void GetBookByBookNameReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetBookByBookNameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CRYSTAL_NET.service.GetBookByBookNameReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bookname_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBookByBookNameReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string BookName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_bookname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "CRYSTAL_NET.service.GetBookByBookNameReq.BookName"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBookByBookNameReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CRYSTAL_NET.service.GetBookByBookNameReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string BookName = 1;
  if (!this->_internal_bookname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bookname().data(), static_cast<int>(this->_internal_bookname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "CRYSTAL_NET.service.GetBookByBookNameReq.BookName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_bookname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CRYSTAL_NET.service.GetBookByBookNameReq)
  return target;
}

size_t GetBookByBookNameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CRYSTAL_NET.service.GetBookByBookNameReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string BookName = 1;
  if (!this->_internal_bookname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_bookname());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBookByBookNameReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetBookByBookNameReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBookByBookNameReq::GetClassData() const { return &_class_data_; }


void GetBookByBookNameReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetBookByBookNameReq*>(&to_msg);
  auto& from = static_cast<const GetBookByBookNameReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CRYSTAL_NET.service.GetBookByBookNameReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_bookname().empty()) {
    _this->_internal_set_bookname(from._internal_bookname());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBookByBookNameReq::CopyFrom(const GetBookByBookNameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CRYSTAL_NET.service.GetBookByBookNameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBookByBookNameReq::IsInitialized() const {
  return true;
}

void GetBookByBookNameReq::InternalSwap(GetBookByBookNameReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.bookname_, lhs_arena,
      &other->_impl_.bookname_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBookByBookNameReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_library_2eproto_getter, &descriptor_table_library_2eproto_once,
      file_level_metadata_library_2eproto[29]);
}

// ===================================================================

class GetBookByBookNameRes::_Internal {
 public:
};

void GetBookByBookNameRes::clear_bookinfolist() {
  _impl_.bookinfolist_.Clear();
}
GetBookByBookNameRes::GetBookByBookNameRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CRYSTAL_NET.service.GetBookByBookNameRes)
}
GetBookByBookNameRes::GetBookByBookNameRes(const GetBookByBookNameRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetBookByBookNameRes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.bookinfolist_){from._impl_.bookinfolist_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CRYSTAL_NET.service.GetBookByBookNameRes)
}

inline void GetBookByBookNameRes::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.bookinfolist_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetBookByBookNameRes::~GetBookByBookNameRes() {
  // @@protoc_insertion_point(destructor:CRYSTAL_NET.service.GetBookByBookNameRes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetBookByBookNameRes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.bookinfolist_.~RepeatedPtrField();
}

void GetBookByBookNameRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetBookByBookNameRes::Clear() {
// @@protoc_insertion_point(message_clear_start:CRYSTAL_NET.service.GetBookByBookNameRes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bookinfolist_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBookByBookNameRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .CRYSTAL_NET.service.BookInfo BookInfoList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_bookinfolist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBookByBookNameRes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CRYSTAL_NET.service.GetBookByBookNameRes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CRYSTAL_NET.service.BookInfo BookInfoList = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_bookinfolist_size()); i < n; i++) {
    const auto& repfield = this->_internal_bookinfolist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CRYSTAL_NET.service.GetBookByBookNameRes)
  return target;
}

size_t GetBookByBookNameRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CRYSTAL_NET.service.GetBookByBookNameRes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CRYSTAL_NET.service.BookInfo BookInfoList = 1;
  total_size += 1UL * this->_internal_bookinfolist_size();
  for (const auto& msg : this->_impl_.bookinfolist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBookByBookNameRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetBookByBookNameRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBookByBookNameRes::GetClassData() const { return &_class_data_; }


void GetBookByBookNameRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetBookByBookNameRes*>(&to_msg);
  auto& from = static_cast<const GetBookByBookNameRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CRYSTAL_NET.service.GetBookByBookNameRes)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.bookinfolist_.MergeFrom(from._impl_.bookinfolist_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBookByBookNameRes::CopyFrom(const GetBookByBookNameRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CRYSTAL_NET.service.GetBookByBookNameRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBookByBookNameRes::IsInitialized() const {
  return true;
}

void GetBookByBookNameRes::InternalSwap(GetBookByBookNameRes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.bookinfolist_.InternalSwap(&other->_impl_.bookinfolist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBookByBookNameRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_library_2eproto_getter, &descriptor_table_library_2eproto_once,
      file_level_metadata_library_2eproto[30]);
}

// ===================================================================

class GetBookInfoListReq::_Internal {
 public:
};

GetBookInfoListReq::GetBookInfoListReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CRYSTAL_NET.service.GetBookInfoListReq)
}
GetBookInfoListReq::GetBookInfoListReq(const GetBookInfoListReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetBookInfoListReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.basebookid_){}
    , decltype(_impl_.bookcount_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.basebookid_, &from._impl_.basebookid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.bookcount_) -
    reinterpret_cast<char*>(&_impl_.basebookid_)) + sizeof(_impl_.bookcount_));
  // @@protoc_insertion_point(copy_constructor:CRYSTAL_NET.service.GetBookInfoListReq)
}

inline void GetBookInfoListReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.basebookid_){uint64_t{0u}}
    , decltype(_impl_.bookcount_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetBookInfoListReq::~GetBookInfoListReq() {
  // @@protoc_insertion_point(destructor:CRYSTAL_NET.service.GetBookInfoListReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetBookInfoListReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetBookInfoListReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetBookInfoListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CRYSTAL_NET.service.GetBookInfoListReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.basebookid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.bookcount_) -
      reinterpret_cast<char*>(&_impl_.basebookid_)) + sizeof(_impl_.bookcount_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBookInfoListReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 BaseBookId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.basebookid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 BookCount = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.bookcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBookInfoListReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CRYSTAL_NET.service.GetBookInfoListReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 BaseBookId = 1;
  if (this->_internal_basebookid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_basebookid(), target);
  }

  // sint32 BookCount = 2;
  if (this->_internal_bookcount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(2, this->_internal_bookcount(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CRYSTAL_NET.service.GetBookInfoListReq)
  return target;
}

size_t GetBookInfoListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CRYSTAL_NET.service.GetBookInfoListReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 BaseBookId = 1;
  if (this->_internal_basebookid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_basebookid());
  }

  // sint32 BookCount = 2;
  if (this->_internal_bookcount() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_bookcount());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBookInfoListReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetBookInfoListReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBookInfoListReq::GetClassData() const { return &_class_data_; }


void GetBookInfoListReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetBookInfoListReq*>(&to_msg);
  auto& from = static_cast<const GetBookInfoListReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CRYSTAL_NET.service.GetBookInfoListReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_basebookid() != 0) {
    _this->_internal_set_basebookid(from._internal_basebookid());
  }
  if (from._internal_bookcount() != 0) {
    _this->_internal_set_bookcount(from._internal_bookcount());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBookInfoListReq::CopyFrom(const GetBookInfoListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CRYSTAL_NET.service.GetBookInfoListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBookInfoListReq::IsInitialized() const {
  return true;
}

void GetBookInfoListReq::InternalSwap(GetBookInfoListReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetBookInfoListReq, _impl_.bookcount_)
      + sizeof(GetBookInfoListReq::_impl_.bookcount_)
      - PROTOBUF_FIELD_OFFSET(GetBookInfoListReq, _impl_.basebookid_)>(
          reinterpret_cast<char*>(&_impl_.basebookid_),
          reinterpret_cast<char*>(&other->_impl_.basebookid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBookInfoListReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_library_2eproto_getter, &descriptor_table_library_2eproto_once,
      file_level_metadata_library_2eproto[31]);
}

// ===================================================================

class GetBookInfoListRes::_Internal {
 public:
};

void GetBookInfoListRes::clear_bookinfolist() {
  _impl_.bookinfolist_.Clear();
}
GetBookInfoListRes::GetBookInfoListRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CRYSTAL_NET.service.GetBookInfoListRes)
}
GetBookInfoListRes::GetBookInfoListRes(const GetBookInfoListRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetBookInfoListRes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.bookinfolist_){from._impl_.bookinfolist_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CRYSTAL_NET.service.GetBookInfoListRes)
}

inline void GetBookInfoListRes::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.bookinfolist_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetBookInfoListRes::~GetBookInfoListRes() {
  // @@protoc_insertion_point(destructor:CRYSTAL_NET.service.GetBookInfoListRes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetBookInfoListRes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.bookinfolist_.~RepeatedPtrField();
}

void GetBookInfoListRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetBookInfoListRes::Clear() {
// @@protoc_insertion_point(message_clear_start:CRYSTAL_NET.service.GetBookInfoListRes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bookinfolist_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBookInfoListRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .CRYSTAL_NET.service.BookInfo BookInfoList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_bookinfolist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBookInfoListRes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CRYSTAL_NET.service.GetBookInfoListRes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CRYSTAL_NET.service.BookInfo BookInfoList = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_bookinfolist_size()); i < n; i++) {
    const auto& repfield = this->_internal_bookinfolist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CRYSTAL_NET.service.GetBookInfoListRes)
  return target;
}

size_t GetBookInfoListRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CRYSTAL_NET.service.GetBookInfoListRes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CRYSTAL_NET.service.BookInfo BookInfoList = 1;
  total_size += 1UL * this->_internal_bookinfolist_size();
  for (const auto& msg : this->_impl_.bookinfolist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBookInfoListRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetBookInfoListRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBookInfoListRes::GetClassData() const { return &_class_data_; }


void GetBookInfoListRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetBookInfoListRes*>(&to_msg);
  auto& from = static_cast<const GetBookInfoListRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CRYSTAL_NET.service.GetBookInfoListRes)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.bookinfolist_.MergeFrom(from._impl_.bookinfolist_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBookInfoListRes::CopyFrom(const GetBookInfoListRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CRYSTAL_NET.service.GetBookInfoListRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBookInfoListRes::IsInitialized() const {
  return true;
}

void GetBookInfoListRes::InternalSwap(GetBookInfoListRes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.bookinfolist_.InternalSwap(&other->_impl_.bookinfolist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBookInfoListRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_library_2eproto_getter, &descriptor_table_library_2eproto_once,
      file_level_metadata_library_2eproto[32]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace service
}  // namespace CRYSTAL_NET
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::CRYSTAL_NET::service::GetLibraryInfoReq*
Arena::CreateMaybeMessage< ::CRYSTAL_NET::service::GetLibraryInfoReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CRYSTAL_NET::service::GetLibraryInfoReq >(arena);
}
template<> PROTOBUF_NOINLINE ::CRYSTAL_NET::service::LibraryInfoNty*
Arena::CreateMaybeMessage< ::CRYSTAL_NET::service::LibraryInfoNty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CRYSTAL_NET::service::LibraryInfoNty >(arena);
}
template<> PROTOBUF_NOINLINE ::CRYSTAL_NET::service::GetLibraryInfoRes*
Arena::CreateMaybeMessage< ::CRYSTAL_NET::service::GetLibraryInfoRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CRYSTAL_NET::service::GetLibraryInfoRes >(arena);
}
template<> PROTOBUF_NOINLINE ::CRYSTAL_NET::service::CreateLibraryReq*
Arena::CreateMaybeMessage< ::CRYSTAL_NET::service::CreateLibraryReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CRYSTAL_NET::service::CreateLibraryReq >(arena);
}
template<> PROTOBUF_NOINLINE ::CRYSTAL_NET::service::CreateLibraryRes*
Arena::CreateMaybeMessage< ::CRYSTAL_NET::service::CreateLibraryRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CRYSTAL_NET::service::CreateLibraryRes >(arena);
}
template<> PROTOBUF_NOINLINE ::CRYSTAL_NET::service::JoinLibraryReq*
Arena::CreateMaybeMessage< ::CRYSTAL_NET::service::JoinLibraryReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CRYSTAL_NET::service::JoinLibraryReq >(arena);
}
template<> PROTOBUF_NOINLINE ::CRYSTAL_NET::service::JoinLibraryRes*
Arena::CreateMaybeMessage< ::CRYSTAL_NET::service::JoinLibraryRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CRYSTAL_NET::service::JoinLibraryRes >(arena);
}
template<> PROTOBUF_NOINLINE ::CRYSTAL_NET::service::QuitLibraryReq*
Arena::CreateMaybeMessage< ::CRYSTAL_NET::service::QuitLibraryReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CRYSTAL_NET::service::QuitLibraryReq >(arena);
}
template<> PROTOBUF_NOINLINE ::CRYSTAL_NET::service::QuitLibraryRes*
Arena::CreateMaybeMessage< ::CRYSTAL_NET::service::QuitLibraryRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CRYSTAL_NET::service::QuitLibraryRes >(arena);
}
template<> PROTOBUF_NOINLINE ::CRYSTAL_NET::service::GetLibraryListReq*
Arena::CreateMaybeMessage< ::CRYSTAL_NET::service::GetLibraryListReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CRYSTAL_NET::service::GetLibraryListReq >(arena);
}
template<> PROTOBUF_NOINLINE ::CRYSTAL_NET::service::GetLibraryListRes*
Arena::CreateMaybeMessage< ::CRYSTAL_NET::service::GetLibraryListRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CRYSTAL_NET::service::GetLibraryListRes >(arena);
}
template<> PROTOBUF_NOINLINE ::CRYSTAL_NET::service::TransferLibraianReq*
Arena::CreateMaybeMessage< ::CRYSTAL_NET::service::TransferLibraianReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CRYSTAL_NET::service::TransferLibraianReq >(arena);
}
template<> PROTOBUF_NOINLINE ::CRYSTAL_NET::service::TransferLibraianRes*
Arena::CreateMaybeMessage< ::CRYSTAL_NET::service::TransferLibraianRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CRYSTAL_NET::service::TransferLibraianRes >(arena);
}
template<> PROTOBUF_NOINLINE ::CRYSTAL_NET::service::ModifyMemberInfoReq*
Arena::CreateMaybeMessage< ::CRYSTAL_NET::service::ModifyMemberInfoReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CRYSTAL_NET::service::ModifyMemberInfoReq >(arena);
}
template<> PROTOBUF_NOINLINE ::CRYSTAL_NET::service::ModifyMemberInfoRes*
Arena::CreateMaybeMessage< ::CRYSTAL_NET::service::ModifyMemberInfoRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CRYSTAL_NET::service::ModifyMemberInfoRes >(arena);
}
template<> PROTOBUF_NOINLINE ::CRYSTAL_NET::service::UserLibraryInfoNty*
Arena::CreateMaybeMessage< ::CRYSTAL_NET::service::UserLibraryInfoNty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CRYSTAL_NET::service::UserLibraryInfoNty >(arena);
}
template<> PROTOBUF_NOINLINE ::CRYSTAL_NET::service::GetLibraryMemberSimpleInfoReq*
Arena::CreateMaybeMessage< ::CRYSTAL_NET::service::GetLibraryMemberSimpleInfoReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CRYSTAL_NET::service::GetLibraryMemberSimpleInfoReq >(arena);
}
template<> PROTOBUF_NOINLINE ::CRYSTAL_NET::service::GetLibraryMemberSimpleInfoRes*
Arena::CreateMaybeMessage< ::CRYSTAL_NET::service::GetLibraryMemberSimpleInfoRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CRYSTAL_NET::service::GetLibraryMemberSimpleInfoRes >(arena);
}
template<> PROTOBUF_NOINLINE ::CRYSTAL_NET::service::AddLibraryBookReq*
Arena::CreateMaybeMessage< ::CRYSTAL_NET::service::AddLibraryBookReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CRYSTAL_NET::service::AddLibraryBookReq >(arena);
}
template<> PROTOBUF_NOINLINE ::CRYSTAL_NET::service::AddLibraryBookRes*
Arena::CreateMaybeMessage< ::CRYSTAL_NET::service::AddLibraryBookRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CRYSTAL_NET::service::AddLibraryBookRes >(arena);
}
template<> PROTOBUF_NOINLINE ::CRYSTAL_NET::service::AddLibraryBookCountReq*
Arena::CreateMaybeMessage< ::CRYSTAL_NET::service::AddLibraryBookCountReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CRYSTAL_NET::service::AddLibraryBookCountReq >(arena);
}
template<> PROTOBUF_NOINLINE ::CRYSTAL_NET::service::AddLibraryBookCountRes*
Arena::CreateMaybeMessage< ::CRYSTAL_NET::service::AddLibraryBookCountRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CRYSTAL_NET::service::AddLibraryBookCountRes >(arena);
}
template<> PROTOBUF_NOINLINE ::CRYSTAL_NET::service::GetBookListReq*
Arena::CreateMaybeMessage< ::CRYSTAL_NET::service::GetBookListReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CRYSTAL_NET::service::GetBookListReq >(arena);
}
template<> PROTOBUF_NOINLINE ::CRYSTAL_NET::service::BookListNty*
Arena::CreateMaybeMessage< ::CRYSTAL_NET::service::BookListNty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CRYSTAL_NET::service::BookListNty >(arena);
}
template<> PROTOBUF_NOINLINE ::CRYSTAL_NET::service::BooksChangeNty*
Arena::CreateMaybeMessage< ::CRYSTAL_NET::service::BooksChangeNty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CRYSTAL_NET::service::BooksChangeNty >(arena);
}
template<> PROTOBUF_NOINLINE ::CRYSTAL_NET::service::BookVariantInfoItemsNty*
Arena::CreateMaybeMessage< ::CRYSTAL_NET::service::BookVariantInfoItemsNty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CRYSTAL_NET::service::BookVariantInfoItemsNty >(arena);
}
template<> PROTOBUF_NOINLINE ::CRYSTAL_NET::service::GetBookListRes*
Arena::CreateMaybeMessage< ::CRYSTAL_NET::service::GetBookListRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CRYSTAL_NET::service::GetBookListRes >(arena);
}
template<> PROTOBUF_NOINLINE ::CRYSTAL_NET::service::GetBookInfoReq*
Arena::CreateMaybeMessage< ::CRYSTAL_NET::service::GetBookInfoReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CRYSTAL_NET::service::GetBookInfoReq >(arena);
}
template<> PROTOBUF_NOINLINE ::CRYSTAL_NET::service::GetBookInfoRes*
Arena::CreateMaybeMessage< ::CRYSTAL_NET::service::GetBookInfoRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CRYSTAL_NET::service::GetBookInfoRes >(arena);
}
template<> PROTOBUF_NOINLINE ::CRYSTAL_NET::service::GetBookByBookNameReq*
Arena::CreateMaybeMessage< ::CRYSTAL_NET::service::GetBookByBookNameReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CRYSTAL_NET::service::GetBookByBookNameReq >(arena);
}
template<> PROTOBUF_NOINLINE ::CRYSTAL_NET::service::GetBookByBookNameRes*
Arena::CreateMaybeMessage< ::CRYSTAL_NET::service::GetBookByBookNameRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CRYSTAL_NET::service::GetBookByBookNameRes >(arena);
}
template<> PROTOBUF_NOINLINE ::CRYSTAL_NET::service::GetBookInfoListReq*
Arena::CreateMaybeMessage< ::CRYSTAL_NET::service::GetBookInfoListReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CRYSTAL_NET::service::GetBookInfoListReq >(arena);
}
template<> PROTOBUF_NOINLINE ::CRYSTAL_NET::service::GetBookInfoListRes*
Arena::CreateMaybeMessage< ::CRYSTAL_NET::service::GetBookInfoListRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CRYSTAL_NET::service::GetBookInfoListRes >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
