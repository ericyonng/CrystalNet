#include <pch.h>
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com_bookbag.proto

#include <protocols/cplusplus/library/com_bookbag.pb.h>
POOL_CREATE_OBJ_DEFAULT_IMPL(BookInfoItemFactory);
POOL_CREATE_OBJ_DEFAULT_IMPL(BookBagInfoFactory);

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace CRYSTAL_NET {
namespace service {
PROTOBUF_CONSTEXPR BookInfoItem::BookInfoItem(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.bookid_)*/uint64_t{0u}
  , /*decltype(_impl_.bookcount_)*/0
  , /*decltype(_impl_.borrowdays_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BookInfoItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BookInfoItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BookInfoItemDefaultTypeInternal() {}
  union {
    BookInfoItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BookInfoItemDefaultTypeInternal _BookInfoItem_default_instance_;
PROTOBUF_CONSTEXPR BookBagInfo::BookBagInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.bookinfoitemlist_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BookBagInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BookBagInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BookBagInfoDefaultTypeInternal() {}
  union {
    BookBagInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BookBagInfoDefaultTypeInternal _BookBagInfo_default_instance_;
}  // namespace service
}  // namespace CRYSTAL_NET
static ::_pb::Metadata file_level_metadata_com_5fbookbag_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_com_5fbookbag_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_com_5fbookbag_2eproto = nullptr;

const uint32_t TableStruct_com_5fbookbag_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::BookInfoItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::BookInfoItem, _impl_.bookid_),
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::BookInfoItem, _impl_.bookcount_),
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::BookInfoItem, _impl_.borrowdays_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::BookBagInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::BookBagInfo, _impl_.bookinfoitemlist_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::CRYSTAL_NET::service::BookInfoItem)},
  { 9, -1, -1, sizeof(::CRYSTAL_NET::service::BookBagInfo)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::CRYSTAL_NET::service::_BookInfoItem_default_instance_._instance,
  &::CRYSTAL_NET::service::_BookBagInfo_default_instance_._instance,
};

const char descriptor_table_protodef_com_5fbookbag_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021com_bookbag.proto\022\023CRYSTAL_NET.service"
  "\"E\n\014BookInfoItem\022\016\n\006BookId\030\001 \001(\004\022\021\n\tBook"
  "Count\030\002 \001(\021\022\022\n\nBorrowDays\030\003 \001(\021\"J\n\013BookB"
  "agInfo\022;\n\020BookInfoItemList\030\001 \003(\0132!.CRYST"
  "AL_NET.service.BookInfoItemb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_com_5fbookbag_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_com_5fbookbag_2eproto = {
    false, false, 195, descriptor_table_protodef_com_5fbookbag_2eproto,
    "com_bookbag.proto",
    &descriptor_table_com_5fbookbag_2eproto_once, nullptr, 0, 2,
    schemas, file_default_instances, TableStruct_com_5fbookbag_2eproto::offsets,
    file_level_metadata_com_5fbookbag_2eproto, file_level_enum_descriptors_com_5fbookbag_2eproto,
    file_level_service_descriptors_com_5fbookbag_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_com_5fbookbag_2eproto_getter() {
  return &descriptor_table_com_5fbookbag_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_com_5fbookbag_2eproto(&descriptor_table_com_5fbookbag_2eproto);
namespace CRYSTAL_NET {
namespace service {

// ===================================================================

class BookInfoItem::_Internal {
 public:
};

BookInfoItem::BookInfoItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CRYSTAL_NET.service.BookInfoItem)
}
BookInfoItem::BookInfoItem(const BookInfoItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BookInfoItem* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.bookid_){}
    , decltype(_impl_.bookcount_){}
    , decltype(_impl_.borrowdays_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.bookid_, &from._impl_.bookid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.borrowdays_) -
    reinterpret_cast<char*>(&_impl_.bookid_)) + sizeof(_impl_.borrowdays_));
  // @@protoc_insertion_point(copy_constructor:CRYSTAL_NET.service.BookInfoItem)
}

inline void BookInfoItem::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.bookid_){uint64_t{0u}}
    , decltype(_impl_.bookcount_){0}
    , decltype(_impl_.borrowdays_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

BookInfoItem::~BookInfoItem() {
  // @@protoc_insertion_point(destructor:CRYSTAL_NET.service.BookInfoItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BookInfoItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BookInfoItem::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BookInfoItem::Clear() {
// @@protoc_insertion_point(message_clear_start:CRYSTAL_NET.service.BookInfoItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.bookid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.borrowdays_) -
      reinterpret_cast<char*>(&_impl_.bookid_)) + sizeof(_impl_.borrowdays_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BookInfoItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 BookId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.bookid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 BookCount = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.bookcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 BorrowDays = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.borrowdays_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BookInfoItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CRYSTAL_NET.service.BookInfoItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 BookId = 1;
  if (this->_internal_bookid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_bookid(), target);
  }

  // sint32 BookCount = 2;
  if (this->_internal_bookcount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(2, this->_internal_bookcount(), target);
  }

  // sint32 BorrowDays = 3;
  if (this->_internal_borrowdays() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(3, this->_internal_borrowdays(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CRYSTAL_NET.service.BookInfoItem)
  return target;
}

size_t BookInfoItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CRYSTAL_NET.service.BookInfoItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 BookId = 1;
  if (this->_internal_bookid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_bookid());
  }

  // sint32 BookCount = 2;
  if (this->_internal_bookcount() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_bookcount());
  }

  // sint32 BorrowDays = 3;
  if (this->_internal_borrowdays() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_borrowdays());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BookInfoItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BookInfoItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BookInfoItem::GetClassData() const { return &_class_data_; }


void BookInfoItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BookInfoItem*>(&to_msg);
  auto& from = static_cast<const BookInfoItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CRYSTAL_NET.service.BookInfoItem)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_bookid() != 0) {
    _this->_internal_set_bookid(from._internal_bookid());
  }
  if (from._internal_bookcount() != 0) {
    _this->_internal_set_bookcount(from._internal_bookcount());
  }
  if (from._internal_borrowdays() != 0) {
    _this->_internal_set_borrowdays(from._internal_borrowdays());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BookInfoItem::CopyFrom(const BookInfoItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CRYSTAL_NET.service.BookInfoItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BookInfoItem::IsInitialized() const {
  return true;
}

void BookInfoItem::InternalSwap(BookInfoItem* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BookInfoItem, _impl_.borrowdays_)
      + sizeof(BookInfoItem::_impl_.borrowdays_)
      - PROTOBUF_FIELD_OFFSET(BookInfoItem, _impl_.bookid_)>(
          reinterpret_cast<char*>(&_impl_.bookid_),
          reinterpret_cast<char*>(&other->_impl_.bookid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BookInfoItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_com_5fbookbag_2eproto_getter, &descriptor_table_com_5fbookbag_2eproto_once,
      file_level_metadata_com_5fbookbag_2eproto[0]);
}

// ===================================================================

class BookBagInfo::_Internal {
 public:
};

BookBagInfo::BookBagInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:CRYSTAL_NET.service.BookBagInfo)
}
BookBagInfo::BookBagInfo(const BookBagInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BookBagInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.bookinfoitemlist_){from._impl_.bookinfoitemlist_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CRYSTAL_NET.service.BookBagInfo)
}

inline void BookBagInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.bookinfoitemlist_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

BookBagInfo::~BookBagInfo() {
  // @@protoc_insertion_point(destructor:CRYSTAL_NET.service.BookBagInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BookBagInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.bookinfoitemlist_.~RepeatedPtrField();
}

void BookBagInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BookBagInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CRYSTAL_NET.service.BookBagInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bookinfoitemlist_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BookBagInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .CRYSTAL_NET.service.BookInfoItem BookInfoItemList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_bookinfoitemlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BookBagInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CRYSTAL_NET.service.BookBagInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CRYSTAL_NET.service.BookInfoItem BookInfoItemList = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_bookinfoitemlist_size()); i < n; i++) {
    const auto& repfield = this->_internal_bookinfoitemlist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CRYSTAL_NET.service.BookBagInfo)
  return target;
}

size_t BookBagInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CRYSTAL_NET.service.BookBagInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CRYSTAL_NET.service.BookInfoItem BookInfoItemList = 1;
  total_size += 1UL * this->_internal_bookinfoitemlist_size();
  for (const auto& msg : this->_impl_.bookinfoitemlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BookBagInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BookBagInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BookBagInfo::GetClassData() const { return &_class_data_; }


void BookBagInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BookBagInfo*>(&to_msg);
  auto& from = static_cast<const BookBagInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CRYSTAL_NET.service.BookBagInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.bookinfoitemlist_.MergeFrom(from._impl_.bookinfoitemlist_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BookBagInfo::CopyFrom(const BookBagInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CRYSTAL_NET.service.BookBagInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BookBagInfo::IsInitialized() const {
  return true;
}

void BookBagInfo::InternalSwap(BookBagInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.bookinfoitemlist_.InternalSwap(&other->_impl_.bookinfoitemlist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BookBagInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_com_5fbookbag_2eproto_getter, &descriptor_table_com_5fbookbag_2eproto_once,
      file_level_metadata_com_5fbookbag_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace service
}  // namespace CRYSTAL_NET
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::CRYSTAL_NET::service::BookInfoItem*
Arena::CreateMaybeMessage< ::CRYSTAL_NET::service::BookInfoItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CRYSTAL_NET::service::BookInfoItem >(arena);
}
template<> PROTOBUF_NOINLINE ::CRYSTAL_NET::service::BookBagInfo*
Arena::CreateMaybeMessage< ::CRYSTAL_NET::service::BookBagInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CRYSTAL_NET::service::BookBagInfo >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
