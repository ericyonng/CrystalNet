#include <pch.h>
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com.proto

#include <protocols/cplusplus/com.pb.h>
POOL_CREATE_OBJ_DEFAULT_IMPL(CreatureAttrKeyFactory);

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace CRYSTAL_NET {
namespace service {
PROTOBUF_CONSTEXPR CreatureAttrKey::CreatureAttrKey(
    ::_pbi::ConstantInitialized) {}
struct CreatureAttrKeyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreatureAttrKeyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreatureAttrKeyDefaultTypeInternal() {}
  union {
    CreatureAttrKey _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreatureAttrKeyDefaultTypeInternal _CreatureAttrKey_default_instance_;
}  // namespace service
}  // namespace CRYSTAL_NET
static ::_pb::Metadata file_level_metadata_com_2eproto[1];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_com_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_com_2eproto = nullptr;

const uint32_t TableStruct_com_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CRYSTAL_NET::service::CreatureAttrKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::CRYSTAL_NET::service::CreatureAttrKey)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::CRYSTAL_NET::service::_CreatureAttrKey_default_instance_._instance,
};

const char descriptor_table_protodef_com_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\tcom.proto\022\023CRYSTAL_NET.service\"\360\004\n\017Cre"
  "atureAttrKey\"\334\004\n\004ENUM\022\t\n\005BEGIN\020\000\022\007\n\003Atk\020"
  "\001\022\007\n\003Def\020\002\022\t\n\005HpLmt\020\003\022\t\n\005HpRcv\020\004\022\010\n\004Cure"
  "\020\005\022\014\n\010AngerLmt\020\006\022\014\n\010AngerRcv\020\007\022\t\n\005Anger\020"
  "\010\022\006\n\002Hp\020\t\022\013\n\007MoveSpd\020\n\022\n\n\006ActSpd\020\013\022\014\n\010MM"
  "oveSpd\020\014\022\013\n\007MActSpd\020\r\022\013\n\007ExtraHp\020\016\022\014\n\010VM"
  "oveSpd\020\017\022\n\n\006BuffHp\020\021\022\r\n\tBuffHpLmt\020\022\022\024\n\020B"
  "uffHpBloodSpeed\020\023\022\010\n\004Crit\020e\022\007\n\003Res\020f\022\007\n\003"
  "Hit\020g\022\007\n\003Prr\020h\022\007\n\003Ddg\020i\022\010\n\004Crid\020j\022\010\n\004Crr"
  "d\020k\022\t\n\005Critv\020l\022\010\n\004Resv\020m\022\010\n\004Hitv\020n\022\010\n\004Pr"
  "rv\020o\022\010\n\004Ddgv\020p\022\013\n\006AtkAdd\020\227\001\022\013\n\006DefAdd\020\230\001"
  "\022\r\n\010HpLmtAdd\020\231\001\022\t\n\004Pedm\020\311\001\022\t\n\004Prdm\020\312\001\022\t\n"
  "\004Medm\020\313\001\022\t\n\004Mrdm\020\314\001\022\t\n\004Sedm\020\315\001\022\t\n\004Srdm\020\316"
  "\001\022\t\n\004Ardm\020\322\001\022\007\n\002Lv\020\373\001\022\014\n\007AwakeLv\020\374\001\022\013\n\006E"
  "xpLmt\020\375\001\022\010\n\003Exp\020\376\001\022\013\n\006ExpMul\020\377\001\022\013\n\006ExpAd"
  "d\020\200\002\022\014\n\007GoldMul\020\201\002\022\016\n\tDoubleExp\020\202\002\022\n\n\005Vi"
  "pLv\020\216\002\022\013\n\006Forces\020\253\002b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_com_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_com_2eproto = {
    false, false, 667, descriptor_table_protodef_com_2eproto,
    "com.proto",
    &descriptor_table_com_2eproto_once, nullptr, 0, 1,
    schemas, file_default_instances, TableStruct_com_2eproto::offsets,
    file_level_metadata_com_2eproto, file_level_enum_descriptors_com_2eproto,
    file_level_service_descriptors_com_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_com_2eproto_getter() {
  return &descriptor_table_com_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_com_2eproto(&descriptor_table_com_2eproto);
namespace CRYSTAL_NET {
namespace service {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CreatureAttrKey_ENUM_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_com_2eproto);
  return file_level_enum_descriptors_com_2eproto[0];
}
bool CreatureAttrKey_ENUM_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 17:
    case 18:
    case 19:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 151:
    case 152:
    case 153:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 206:
    case 210:
    case 251:
    case 252:
    case 253:
    case 254:
    case 255:
    case 256:
    case 257:
    case 258:
    case 270:
    case 299:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CreatureAttrKey_ENUM CreatureAttrKey::BEGIN;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::Atk;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::Def;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::HpLmt;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::HpRcv;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::Cure;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::AngerLmt;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::AngerRcv;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::Anger;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::Hp;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::MoveSpd;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::ActSpd;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::MMoveSpd;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::MActSpd;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::ExtraHp;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::VMoveSpd;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::BuffHp;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::BuffHpLmt;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::BuffHpBloodSpeed;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::Crit;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::Res;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::Hit;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::Prr;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::Ddg;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::Crid;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::Crrd;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::Critv;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::Resv;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::Hitv;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::Prrv;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::Ddgv;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::AtkAdd;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::DefAdd;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::HpLmtAdd;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::Pedm;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::Prdm;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::Medm;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::Mrdm;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::Sedm;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::Srdm;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::Ardm;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::Lv;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::AwakeLv;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::ExpLmt;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::Exp;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::ExpMul;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::ExpAdd;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::GoldMul;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::DoubleExp;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::VipLv;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::Forces;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::ENUM_MIN;
constexpr CreatureAttrKey_ENUM CreatureAttrKey::ENUM_MAX;
constexpr int CreatureAttrKey::ENUM_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class CreatureAttrKey::_Internal {
 public:
};

CreatureAttrKey::CreatureAttrKey(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CRYSTAL_NET.service.CreatureAttrKey)
}
CreatureAttrKey::CreatureAttrKey(const CreatureAttrKey& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  CreatureAttrKey* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CRYSTAL_NET.service.CreatureAttrKey)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreatureAttrKey::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreatureAttrKey::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CreatureAttrKey::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_com_2eproto_getter, &descriptor_table_com_2eproto_once,
      file_level_metadata_com_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace service
}  // namespace CRYSTAL_NET
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::CRYSTAL_NET::service::CreatureAttrKey*
Arena::CreateMaybeMessage< ::CRYSTAL_NET::service::CreatureAttrKey >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CRYSTAL_NET::service::CreatureAttrKey >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
