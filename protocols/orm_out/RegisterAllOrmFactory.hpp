/*!
*  MIT License
*  
*  Copyright (c) 2020 ericyonng<120453674@qq.com>
*  
*  Permission is hereby granted, free of charge, to any person obtaining a copy
*  of this software and associated documentation files (the "Software"), to deal
*  in the Software without restriction, including without limitation the rights
*  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
*  copies of the Software, and to permit persons to whom the Software is
*  furnished to do so, subject to the following conditions:
*  
*  The above copyright notice and this permission notice shall be included in all
*  copies or substantial portions of the Software.
*  
*  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
*  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
*  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
*  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
*  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
*  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
*  SOFTWARE.
* 
* Author: Eric Yonng
* Description: Generated By protogentool, Dont Modify This File!!!
*/


_ormIdRefOrmFactory.insert(std::make_pair(2, UserBaseInfoOrmDataFactory::NewThreadLocal_UserBaseInfoOrmDataFactory()));
_ormIdRefOrmFactory.insert(std::make_pair(3, TestCustomDataOrmDataFactory::NewThreadLocal_TestCustomDataOrmDataFactory()));
_ormIdRefOrmFactory.insert(std::make_pair(4, TestOrmOrmDataFactory::NewThreadLocal_TestOrmOrmDataFactory()));
_ormIdRefOrmFactory.insert(std::make_pair(5, LibraryInfoOrmDataFactory::NewThreadLocal_LibraryInfoOrmDataFactory()));
_ormIdRefOrmFactory.insert(std::make_pair(6, LibararyManagerInfoOrmDataFactory::NewThreadLocal_LibararyManagerInfoOrmDataFactory()));
_ormIdRefOrmFactory.insert(std::make_pair(7, MemberInfoOrmDataFactory::NewThreadLocal_MemberInfoOrmDataFactory()));
_ormIdRefOrmFactory.insert(std::make_pair(8, BookInfoOrmDataFactory::NewThreadLocal_BookInfoOrmDataFactory()));
_ormIdRefOrmFactory.insert(std::make_pair(9, BookBagInfoOrmDataFactory::NewThreadLocal_BookBagInfoOrmDataFactory()));
_ormIdRefOrmFactory.insert(std::make_pair(10, BookInfoItemOrmDataFactory::NewThreadLocal_BookInfoItemOrmDataFactory()));
_ormIdRefOrmFactory.insert(std::make_pair(11, BorrowOrderInfoOrmDataFactory::NewThreadLocal_BorrowOrderInfoOrmDataFactory()));
_ormIdRefOrmFactory.insert(std::make_pair(12, BorrowBookInfoOrmDataFactory::NewThreadLocal_BorrowBookInfoOrmDataFactory()));
_ormIdRefOrmFactory.insert(std::make_pair(13, CancelOrderReasonOrmDataFactory::NewThreadLocal_CancelOrderReasonOrmDataFactory()));
_ormIdRefOrmFactory.insert(std::make_pair(14, BookVariantInfoOrmDataFactory::NewThreadLocal_BookVariantInfoOrmDataFactory()));
_ormIdRefOrmFactory.insert(std::make_pair(15, SnapshotClientInfoOrmDataFactory::NewThreadLocal_SnapshotClientInfoOrmDataFactory()));
_ormIdRefOrmFactory.insert(std::make_pair(16, SimpleInfoOrmDataFactory::NewThreadLocal_SimpleInfoOrmDataFactory()));
