// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: com.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
using ProtoPackage.Attributes;

/// <summary>Holder for reflection information generated from com.proto</summary>
public static partial class ComReflection {

  #region Descriptor
  /// <summary>File descriptor for com.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ComReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cgljb20ucHJvdG8i8AQKD0NyZWF0dXJlQXR0cktleSLcBAoERU5VTRIJCgVC",
          "RUdJThAAEgcKA0F0axABEgcKA0RlZhACEgkKBUhwTG10EAMSCQoFSHBSY3YQ",
          "BBIICgRDdXJlEAUSDAoIQW5nZXJMbXQQBhIMCghBbmdlclJjdhAHEgkKBUFu",
          "Z2VyEAgSBgoCSHAQCRILCgdNb3ZlU3BkEAoSCgoGQWN0U3BkEAsSDAoITU1v",
          "dmVTcGQQDBILCgdNQWN0U3BkEA0SCwoHRXh0cmFIcBAOEgwKCFZNb3ZlU3Bk",
          "EA8SCgoGQnVmZkhwEBESDQoJQnVmZkhwTG10EBISFAoQQnVmZkhwQmxvb2RT",
          "cGVlZBATEggKBENyaXQQZRIHCgNSZXMQZhIHCgNIaXQQZxIHCgNQcnIQaBIH",
          "CgNEZGcQaRIICgRDcmlkEGoSCAoEQ3JyZBBrEgkKBUNyaXR2EGwSCAoEUmVz",
          "dhBtEggKBEhpdHYQbhIICgRQcnJ2EG8SCAoERGRndhBwEgsKBkF0a0FkZBCX",
          "ARILCgZEZWZBZGQQmAESDQoISHBMbXRBZGQQmQESCQoEUGVkbRDJARIJCgRQ",
          "cmRtEMoBEgkKBE1lZG0QywESCQoETXJkbRDMARIJCgRTZWRtEM0BEgkKBFNy",
          "ZG0QzgESCQoEQXJkbRDSARIHCgJMdhD7ARIMCgdBd2FrZUx2EPwBEgsKBkV4",
          "cExtdBD9ARIICgNFeHAQ/gESCwoGRXhwTXVsEP8BEgsKBkV4cEFkZBCAAhIM",
          "CgdHb2xkTXVsEIECEg4KCURvdWJsZUV4cBCCAhIKCgVWaXBMdhCOAhILCgZG",
          "b3JjZXMQqwJiBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CreatureAttrKey), global::CreatureAttrKey.Parser, null, null, new[]{ typeof(global::CreatureAttrKey.Types.ENUM) }, null, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
/// 属性类型枚举
/// </summary>
public sealed partial class CreatureAttrKey : pb::IMessage<CreatureAttrKey>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CreatureAttrKey> _parser = new pb::MessageParser<CreatureAttrKey>(() => new CreatureAttrKey());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CreatureAttrKey> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ComReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CreatureAttrKey() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CreatureAttrKey(CreatureAttrKey other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CreatureAttrKey Clone() {
    return new CreatureAttrKey(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CreatureAttrKey);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CreatureAttrKey other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CreatureAttrKey other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CreatureAttrKey message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public enum ENUM {
      /// <summary>
      /// 开始
      /// </summary>
      [pbr::OriginalName("BEGIN")] Begin = 0,
      /// <summary>
      /// 攻击
      /// </summary>
      [pbr::OriginalName("Atk")] Atk = 1,
      /// <summary>
      /// 防御
      /// </summary>
      [pbr::OriginalName("Def")] Def = 2,
      /// <summary>
      ///生命上限
      /// </summary>
      [pbr::OriginalName("HpLmt")] HpLmt = 3,
      /// <summary>
      /// 生命回复
      /// </summary>
      [pbr::OriginalName("HpRcv")] HpRcv = 4,
      /// <summary>
      /// 治疗
      /// </summary>
      [pbr::OriginalName("Cure")] Cure = 5,
      /// <summary>
      /// 怒气上限
      /// </summary>
      [pbr::OriginalName("AngerLmt")] AngerLmt = 6,
      /// <summary>
      /// 怒气恢复
      /// </summary>
      [pbr::OriginalName("AngerRcv")] AngerRcv = 7,
      /// <summary>
      /// 当前怒气
      /// </summary>
      [pbr::OriginalName("Anger")] Anger = 8,
      /// <summary>
      /// 当前生命
      /// </summary>
      [pbr::OriginalName("Hp")] Hp = 9,
      /// <summary>
      /// 移动速度
      /// </summary>
      [pbr::OriginalName("MoveSpd")] MoveSpd = 10,
      /// <summary>
      /// 攻击速度(动画速度)
      /// </summary>
      [pbr::OriginalName("ActSpd")] ActSpd = 11,
      /// <summary>
      /// 骑乘移动速度
      /// </summary>
      [pbr::OriginalName("MMoveSpd")] MmoveSpd = 12,
      /// <summary>
      /// 骑乘动画速率
      /// </summary>
      [pbr::OriginalName("MActSpd")] MactSpd = 13,
      /// <summary>
      /// 额外生命
      /// </summary>
      [pbr::OriginalName("ExtraHp")] ExtraHp = 14,
      /// <summary>
      /// 载具移动速度
      /// </summary>
      [pbr::OriginalName("VMoveSpd")] VmoveSpd = 15,
      /// <summary>
      ///VActSpd = 16; // 载具动画速率
      /// </summary>
      [pbr::OriginalName("BuffHp")] BuffHp = 17,
      /// <summary>
      /// Buff血量上限
      /// </summary>
      [pbr::OriginalName("BuffHpLmt")] BuffHpLmt = 18,
      /// <summary>
      /// Buff流血速度
      /// </summary>
      [pbr::OriginalName("BuffHpBloodSpeed")] BuffHpBloodSpeed = 19,
      /// <summary>
      /// 暴击
      /// </summary>
      [pbr::OriginalName("Crit")] Crit = 101,
      /// <summary>
      /// 抗暴
      /// </summary>
      [pbr::OriginalName("Res")] Res = 102,
      /// <summary>
      /// 精准
      /// </summary>
      [pbr::OriginalName("Hit")] Hit = 103,
      /// <summary>
      /// 格挡
      /// </summary>
      [pbr::OriginalName("Prr")] Prr = 104,
      /// <summary>
      /// 闪避
      /// </summary>
      [pbr::OriginalName("Ddg")] Ddg = 105,
      /// <summary>
      /// 暴伤
      /// </summary>
      [pbr::OriginalName("Crid")] Crid = 106,
      /// <summary>
      /// 暴伤减免
      /// </summary>
      [pbr::OriginalName("Crrd")] Crrd = 107,
      /// <summary>
      /// 暴击率
      /// </summary>
      [pbr::OriginalName("Critv")] Critv = 108,
      /// <summary>
      /// 抗暴率
      /// </summary>
      [pbr::OriginalName("Resv")] Resv = 109,
      /// <summary>
      /// 精准率
      /// </summary>
      [pbr::OriginalName("Hitv")] Hitv = 110,
      /// <summary>
      /// 格挡率
      /// </summary>
      [pbr::OriginalName("Prrv")] Prrv = 111,
      /// <summary>
      /// 闪避率
      /// </summary>
      [pbr::OriginalName("Ddgv")] Ddgv = 112,
      /// <summary>
      /// 攻击加成比
      /// </summary>
      [pbr::OriginalName("AtkAdd")] AtkAdd = 151,
      /// <summary>
      /// 防御加成比
      /// </summary>
      [pbr::OriginalName("DefAdd")] DefAdd = 152,
      /// <summary>
      /// 生命上限加成比
      /// </summary>
      [pbr::OriginalName("HpLmtAdd")] HpLmtAdd = 153,
      /// <summary>
      /// 近战伤害加成
      /// </summary>
      [pbr::OriginalName("Pedm")] Pedm = 201,
      /// <summary>
      /// 近战伤害抵抗
      /// </summary>
      [pbr::OriginalName("Prdm")] Prdm = 202,
      /// <summary>
      /// 魔法伤害加成
      /// </summary>
      [pbr::OriginalName("Medm")] Medm = 203,
      /// <summary>
      /// 魔法伤害抵抗
      /// </summary>
      [pbr::OriginalName("Mrdm")] Mrdm = 204,
      /// <summary>
      /// 穿透伤害加成
      /// </summary>
      [pbr::OriginalName("Sedm")] Sedm = 205,
      /// <summary>
      /// 穿透伤害抵抗
      /// </summary>
      [pbr::OriginalName("Srdm")] Srdm = 206,
      /// <summary>
      /// 所有抵抗增加
      /// </summary>
      [pbr::OriginalName("Ardm")] Ardm = 210,
      /// <summary>
      /// 当前等级
      /// </summary>
      [pbr::OriginalName("Lv")] Lv = 251,
      /// <summary>
      /// 觉醒等级
      /// </summary>
      [pbr::OriginalName("AwakeLv")] AwakeLv = 252,
      /// <summary>
      /// 升级所需经验
      /// </summary>
      [pbr::OriginalName("ExpLmt")] ExpLmt = 253,
      /// <summary>
      /// 当前经验
      /// </summary>
      [pbr::OriginalName("Exp")] Exp = 254,
      /// <summary>
      /// 经验加成(百分比), 只影响杀怪
      /// </summary>
      [pbr::OriginalName("ExpMul")] ExpMul = 255,
      /// <summary>
      /// 经验加成(固定值)
      /// </summary>
      [pbr::OriginalName("ExpAdd")] ExpAdd = 256,
      /// <summary>
      /// 银币加成(百分比)
      /// </summary>
      [pbr::OriginalName("GoldMul")] GoldMul = 257,
      /// <summary>
      /// 双倍经验
      /// </summary>
      [pbr::OriginalName("DoubleExp")] DoubleExp = 258,
      /// <summary>
      /// vip等级
      /// </summary>
      [pbr::OriginalName("VipLv")] VipLv = 270,
      /// <summary>
      /// 战力
      /// </summary>
      [pbr::OriginalName("Forces")] Forces = 299,
    }

  }
  #endregion

}

#endregion


#endregion Designer generated code
